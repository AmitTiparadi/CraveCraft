{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ROG\\\\OneDrive\\\\Desktop\\\\recipe\\\\frontend\\\\frontend\\\\src\\\\components\\\\NorthIndian.js\",\n  _s = $RefreshSig$();\n// NorthIndian.js\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Cards from './cards';\n\n// Import a default image or specific images if available\nimport cholebhature from '../images/CholeBhature.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NorthIndian = () => {\n  _s();\n  const [recipes, setRecipes] = useState([]);\n  useEffect(() => {\n    // Fetch recipes from the backend\n    fetch('/api/recipes/northindian').then(response => response.json()).then(data => setRecipes(data)).catch(error => console.error('Error fetching recipes:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center\",\n      children: recipes.map(recipe => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 col-sm-6 col-md-4 mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-center\",\n          children: /*#__PURE__*/_jsxDEV(Cards, {\n            image: cholebhature // Replace with recipe.image if available\n            ,\n            title: recipe.name,\n            text: recipe.description,\n            linkComponent: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/recipe/${recipe._id}`,\n              className: \"btn btn-primary\",\n              children: \"Explore\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this)\n      }, recipe._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(NorthIndian, \"xBkrk5r3hhKgEpMO+HGI7yKr/O8=\");\n_c = NorthIndian;\nexport default NorthIndian;\nvar _c;\n$RefreshReg$(_c, \"NorthIndian\");","map":{"version":3,"names":["React","useState","useEffect","Link","Cards","cholebhature","jsxDEV","_jsxDEV","NorthIndian","_s","recipes","setRecipes","fetch","then","response","json","data","catch","error","console","className","children","map","recipe","image","title","name","text","description","linkComponent","to","_id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ROG/OneDrive/Desktop/recipe/frontend/frontend/src/components/NorthIndian.js"],"sourcesContent":["// NorthIndian.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Cards from './cards';\r\n\r\n// Import a default image or specific images if available\r\nimport cholebhature from '../images/CholeBhature.jpg';\r\n\r\nconst NorthIndian = () => {\r\n  const [recipes, setRecipes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch recipes from the backend\r\n    fetch('/api/recipes/northindian')\r\n      .then(response => response.json())\r\n      .then(data => setRecipes(data))\r\n      .catch(error => console.error('Error fetching recipes:', error));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      <div className=\"row justify-content-center\">\r\n        {recipes.map((recipe) => (\r\n          <div key={recipe._id} className=\"col-12 col-sm-6 col-md-4 mb-4\">\r\n            <div className=\"d-flex justify-content-center\">\r\n              <Cards \r\n                image={cholebhature} // Replace with recipe.image if available\r\n                title={recipe.name}\r\n                text={recipe.description}\r\n                linkComponent={\r\n                  <Link to={`/recipe/${recipe._id}`} className=\"btn btn-primary\">\r\n                    Explore\r\n                  </Link>\r\n                }\r\n              />\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NorthIndian;"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,KAAK,MAAM,SAAS;;AAE3B;AACA,OAAOC,YAAY,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACd;IACAU,KAAK,CAAC,0BAA0B,CAAC,CAC9BC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIL,UAAU,CAACK,IAAI,CAAC,CAAC,CAC9BC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC,CAAC;EACpE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA;IAAKa,SAAS,EAAC,gBAAgB;IAAAC,QAAA,eAC7Bd,OAAA;MAAKa,SAAS,EAAC,4BAA4B;MAAAC,QAAA,EACxCX,OAAO,CAACY,GAAG,CAAEC,MAAM,iBAClBhB,OAAA;QAAsBa,SAAS,EAAC,+BAA+B;QAAAC,QAAA,eAC7Dd,OAAA;UAAKa,SAAS,EAAC,+BAA+B;UAAAC,QAAA,eAC5Cd,OAAA,CAACH,KAAK;YACJoB,KAAK,EAAEnB,YAAa,CAAC;YAAA;YACrBoB,KAAK,EAAEF,MAAM,CAACG,IAAK;YACnBC,IAAI,EAAEJ,MAAM,CAACK,WAAY;YACzBC,aAAa,eACXtB,OAAA,CAACJ,IAAI;cAAC2B,EAAE,EAAE,WAAWP,MAAM,CAACQ,GAAG,EAAG;cAACX,SAAS,EAAC,iBAAiB;cAAAC,QAAA,EAAC;YAE/D;cAAAW,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM;UACP;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC;MAAC,GAZEZ,MAAM,CAACQ,GAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAaf,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAjCID,WAAW;AAAA4B,EAAA,GAAX5B,WAAW;AAmCjB,eAAeA,WAAW;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}