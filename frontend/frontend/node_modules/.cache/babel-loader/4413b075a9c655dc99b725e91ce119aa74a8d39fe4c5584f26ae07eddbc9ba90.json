{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ROG\\\\OneDrive\\\\Desktop\\\\recipe\\\\frontend\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import './App.css';\n// import Home from './components/Home';\n// import NavBar from './components/Navbar'; \n// import AboutUs from './components/Aboutus';\n// import RecipesByArea from './components/RecipesByArea'; \n// import RecipeDetail from './components/RecipeDetail'; \n// import Login from './components/Login';\n// import Register from './components/Register';\n// import { createBrowserRouter, RouterProvider } from 'react-router-dom';\n// import NorthIndian from './components/NorthIndian';\n// import SouthIndian from './components/SouthIndian';\n// import Continental from './components/Continental';\n// import Recipe from './components/Recipe';\n\n// const router = createBrowserRouter([\n//   {\n//     path: '/',\n//     element: (\n//       <>\n//         <NavBar />\n//         <Home />\n//       </>\n//     ),\n//   },\n//   {\n//     path: '/about',\n//     element: (\n//       <>\n//         <NavBar />\n//         <AboutUs />\n//       </>\n//     ),\n//   },\n//   {\n//     path: '/recipes/:area',\n//     element: (\n//       <>\n//         <NavBar />\n//         <RecipesByArea />\n//       </>\n//     ),\n//   },\n//   {\n//     path: '/recipe/:id',\n//     element: (\n//       <>\n//         <NavBar />\n//         <RecipeDetail />\n//       </>\n//     ),\n//   },\n//   {\n//     path: '/login',\n//     element: (\n//       <>\n//         <NavBar />\n//         <Login />\n//       </>\n//     ),\n//   },\n//   {\n//     path: '/register',\n//     element: (\n//       <>\n//         <NavBar />\n//         <Register />\n//       </>\n//     ),\n//   },\n//   {\n//     path: '/north',\n//     element: (\n//       <>\n//         <NavBar />\n//         <NorthIndian/>\n//       </>\n//     ),\n//   },\n//   {\n//     path: '/south',\n//     element: (\n//       <>\n//         <NavBar />\n//         <SouthIndian/>\n//       </>\n//     ),\n//   },\n//   {\n//     path: '/Continental',\n//     element: (\n//       <>\n//         <NavBar />\n//         <Continental/>\n//       </>\n//     ),\n//   },\n//   {\n//     path: '/Recipe',\n//     element: (\n//       <>\n//         <NavBar />\n//         <Recipe/>\n//       </>\n//     ),\n//   },\n// ]);\n// function App() {\n//   return (\n//     <RouterProvider router={router} />\n//   );\n// }\n\n// export default App;\n\n// import React, { useState, useEffect } from 'react';\n// import './App.css';\n// import Home from './components/Home';\n// import NavBar from './components/Navbar'; \n// import AboutUs from './components/Aboutus';\n// import Confirm from './components/Confirm'; \n// import Login from './components/Login';\n// import Signup from './components/Signup';\n// import NorthIndian from './components/NorthIndian';\n// import SouthIndian from './components/SouthIndian';\n// import Continental from './components/Continental';\n// import Recipe from './components/Recipe';\n// import RecipeDetails from './components/RecipeDetails';\n// import { checkSession } from './sessionService';\n\n// import { createBrowserRouter, RouterProvider } from 'react-router-dom';\n\n// const router = createBrowserRouter([\n//   {\n//     path: '/',\n//     element: (\n//       <>\n//         <NavBar />\n//         <Home />\n//       </>\n//     ),\n//   },\n//   {\n//     path: '/about',\n//     element: (\n//       <>\n//         <NavBar />\n//         <AboutUs />\n//       </>\n//     ),\n//   },\n//   {\n//     path: '/recipes/:id',\n//     element: (\n//       <>\n//         <NavBar />\n//         <Confirm />\n//       </>\n//     ),\n//   },\n//   {\n//     path: '/recipes/:category/:id',\n//     element: (\n//       <>\n//         <NavBar />\n//         <RecipeDetails />\n//       </>\n//     ),\n//   },\n//   {\n//     path: '/login',\n//     element: (\n//       <>\n//         <NavBar />\n//         <Login />\n//       </>\n//     ),\n//   },\n//   {\n//     path: '/signup',\n//     element: (\n//       <>\n//         <NavBar />\n//         <Signup />\n//       </>\n//     ),\n//   },\n//   {\n//     path: '/north',\n//     element: (\n//       <>\n//         <NavBar />\n//         <NorthIndian />\n//       </>\n//     ),\n//   },\n//   {\n//     path: '/south',\n//     element: (\n//       <>\n//         <NavBar />\n//         <SouthIndian />\n//       </>\n//     ),\n//   },\n//   {\n//     path: '/Continental',\n//     element: (\n//       <>\n//         <NavBar />\n//         <Continental />\n//       </>\n//     ),\n//   },\n//   {\n//     path: '/Recipe',\n//     element: (\n//       <>\n//         <NavBar />\n//         <Recipe />\n//       </>\n//     ),\n//   },\n//   // {\n//   //   path: '/recipeinfo/:id', // New route for RecipeInfo\n//   //   element: (\n//   //     <>\n//   //       <NavBar />\n//   //       <RecipeInfo />\n//   //     </>\n//   //   ),\n//   // },\n// ]);\n\n// function App() {\n//   const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n//   useEffect(() => {\n//     const verifySession = async () => {\n//       const sessionData = await checkSession();\n//       setIsLoggedIn(sessionData.isAuthenticated); // Assuming checkSession returns an object with isAuthenticated\n//     };\n//     verifySession();\n//   }, []);\n//   return (\n\n//     <RouterProvider router={router} />\n\n//   );\n// }\n\n// export default App;\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Home from './components/Home';\nimport NavBar from './components/Navbar';\nimport AboutUs from './components/Aboutus';\nimport Confirm from './components/Confirm';\nimport Login from './components/Login';\nimport Signup from './components/Signup';\nimport NorthIndian from './components/NorthIndian';\nimport SouthIndian from './components/SouthIndian';\nimport Continental from './components/Continental';\nimport Recipe from './components/Recipe';\nimport RecipeDetails from './components/RecipeDetails';\nimport { checkSession } from './sessionService';\nimport { createBrowserRouter, RouterProvider } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: '/',\n  element: /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      isLoggedIn: isLoggedIn,\n      setIsLoggedIn: setIsLoggedIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true)\n}, {\n  path: '/about',\n  element: /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      isLoggedIn: isLoggedIn,\n      setIsLoggedIn: setIsLoggedIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AboutUs, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true)\n}, {\n  path: '/recipes/:id',\n  element: /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      isLoggedIn: isLoggedIn,\n      setIsLoggedIn: setIsLoggedIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Confirm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true)\n}, {\n  path: '/recipes/:category/:id',\n  element: /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      isLoggedIn: isLoggedIn,\n      setIsLoggedIn: setIsLoggedIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(RecipeDetails, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true)\n}, {\n  path: '/login',\n  element: /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      isLoggedIn: isLoggedIn,\n      setIsLoggedIn: setIsLoggedIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true)\n}, {\n  path: '/signup',\n  element: /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      isLoggedIn: isLoggedIn,\n      setIsLoggedIn: setIsLoggedIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Signup, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true)\n}, {\n  path: '/north',\n  element: /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      isLoggedIn: isLoggedIn,\n      setIsLoggedIn: setIsLoggedIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(NorthIndian, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true)\n}, {\n  path: '/south',\n  element: /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      isLoggedIn: isLoggedIn,\n      setIsLoggedIn: setIsLoggedIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SouthIndian, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true)\n}, {\n  path: '/continental',\n  element: /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      isLoggedIn: isLoggedIn,\n      setIsLoggedIn: setIsLoggedIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Continental, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true)\n}, {\n  path: '/recipe',\n  element: /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      isLoggedIn: isLoggedIn,\n      setIsLoggedIn: setIsLoggedIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Recipe, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true)\n}]);\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    const verifySession = async () => {\n      const sessionData = await checkSession();\n      setIsLoggedIn(sessionData.isAuthenticated); // Assuming checkSession returns an object with isAuthenticated\n    };\n    verifySession();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 391,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Home","NavBar","AboutUs","Confirm","Login","Signup","NorthIndian","SouthIndian","Continental","Recipe","RecipeDetails","checkSession","createBrowserRouter","RouterProvider","jsxDEV","_jsxDEV","Fragment","_Fragment","router","path","element","children","isLoggedIn","setIsLoggedIn","fileName","_jsxFileName","lineNumber","columnNumber","App","_s","verifySession","sessionData","isAuthenticated","_c","$RefreshReg$"],"sources":["C:/Users/ROG/OneDrive/Desktop/recipe/frontend/frontend/src/App.js"],"sourcesContent":["// import './App.css';\r\n// import Home from './components/Home';\r\n// import NavBar from './components/Navbar'; \r\n// import AboutUs from './components/Aboutus';\r\n// import RecipesByArea from './components/RecipesByArea'; \r\n// import RecipeDetail from './components/RecipeDetail'; \r\n// import Login from './components/Login';\r\n// import Register from './components/Register';\r\n// import { createBrowserRouter, RouterProvider } from 'react-router-dom';\r\n// import NorthIndian from './components/NorthIndian';\r\n// import SouthIndian from './components/SouthIndian';\r\n// import Continental from './components/Continental';\r\n// import Recipe from './components/Recipe';\r\n\r\n\r\n// const router = createBrowserRouter([\r\n//   {\r\n//     path: '/',\r\n//     element: (\r\n//       <>\r\n//         <NavBar />\r\n//         <Home />\r\n//       </>\r\n//     ),\r\n//   },\r\n//   {\r\n//     path: '/about',\r\n//     element: (\r\n//       <>\r\n//         <NavBar />\r\n//         <AboutUs />\r\n//       </>\r\n//     ),\r\n//   },\r\n//   {\r\n//     path: '/recipes/:area',\r\n//     element: (\r\n//       <>\r\n//         <NavBar />\r\n//         <RecipesByArea />\r\n//       </>\r\n//     ),\r\n//   },\r\n//   {\r\n//     path: '/recipe/:id',\r\n//     element: (\r\n//       <>\r\n//         <NavBar />\r\n//         <RecipeDetail />\r\n//       </>\r\n//     ),\r\n//   },\r\n//   {\r\n//     path: '/login',\r\n//     element: (\r\n//       <>\r\n//         <NavBar />\r\n//         <Login />\r\n//       </>\r\n//     ),\r\n//   },\r\n//   {\r\n//     path: '/register',\r\n//     element: (\r\n//       <>\r\n//         <NavBar />\r\n//         <Register />\r\n//       </>\r\n//     ),\r\n//   },\r\n//   {\r\n//     path: '/north',\r\n//     element: (\r\n//       <>\r\n//         <NavBar />\r\n//         <NorthIndian/>\r\n//       </>\r\n//     ),\r\n//   },\r\n//   {\r\n//     path: '/south',\r\n//     element: (\r\n//       <>\r\n//         <NavBar />\r\n//         <SouthIndian/>\r\n//       </>\r\n//     ),\r\n//   },\r\n//   {\r\n//     path: '/Continental',\r\n//     element: (\r\n//       <>\r\n//         <NavBar />\r\n//         <Continental/>\r\n//       </>\r\n//     ),\r\n//   },\r\n//   {\r\n//     path: '/Recipe',\r\n//     element: (\r\n//       <>\r\n//         <NavBar />\r\n//         <Recipe/>\r\n//       </>\r\n//     ),\r\n//   },\r\n// ]);\r\n// function App() {\r\n//   return (\r\n//     <RouterProvider router={router} />\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import './App.css';\r\n// import Home from './components/Home';\r\n// import NavBar from './components/Navbar'; \r\n// import AboutUs from './components/Aboutus';\r\n// import Confirm from './components/Confirm'; \r\n// import Login from './components/Login';\r\n// import Signup from './components/Signup';\r\n// import NorthIndian from './components/NorthIndian';\r\n// import SouthIndian from './components/SouthIndian';\r\n// import Continental from './components/Continental';\r\n// import Recipe from './components/Recipe';\r\n// import RecipeDetails from './components/RecipeDetails';\r\n// import { checkSession } from './sessionService';\r\n\r\n// import { createBrowserRouter, RouterProvider } from 'react-router-dom';\r\n\r\n// const router = createBrowserRouter([\r\n//   {\r\n//     path: '/',\r\n//     element: (\r\n//       <>\r\n//         <NavBar />\r\n//         <Home />\r\n//       </>\r\n//     ),\r\n//   },\r\n//   {\r\n//     path: '/about',\r\n//     element: (\r\n//       <>\r\n//         <NavBar />\r\n//         <AboutUs />\r\n//       </>\r\n//     ),\r\n//   },\r\n//   {\r\n//     path: '/recipes/:id',\r\n//     element: (\r\n//       <>\r\n//         <NavBar />\r\n//         <Confirm />\r\n//       </>\r\n//     ),\r\n//   },\r\n//   {\r\n//     path: '/recipes/:category/:id',\r\n//     element: (\r\n//       <>\r\n//         <NavBar />\r\n//         <RecipeDetails />\r\n//       </>\r\n//     ),\r\n//   },\r\n//   {\r\n//     path: '/login',\r\n//     element: (\r\n//       <>\r\n//         <NavBar />\r\n//         <Login />\r\n//       </>\r\n//     ),\r\n//   },\r\n//   {\r\n//     path: '/signup',\r\n//     element: (\r\n//       <>\r\n//         <NavBar />\r\n//         <Signup />\r\n//       </>\r\n//     ),\r\n//   },\r\n//   {\r\n//     path: '/north',\r\n//     element: (\r\n//       <>\r\n//         <NavBar />\r\n//         <NorthIndian />\r\n//       </>\r\n//     ),\r\n//   },\r\n//   {\r\n//     path: '/south',\r\n//     element: (\r\n//       <>\r\n//         <NavBar />\r\n//         <SouthIndian />\r\n//       </>\r\n//     ),\r\n//   },\r\n//   {\r\n//     path: '/Continental',\r\n//     element: (\r\n//       <>\r\n//         <NavBar />\r\n//         <Continental />\r\n//       </>\r\n//     ),\r\n//   },\r\n//   {\r\n//     path: '/Recipe',\r\n//     element: (\r\n//       <>\r\n//         <NavBar />\r\n//         <Recipe />\r\n//       </>\r\n//     ),\r\n//   },\r\n//   // {\r\n//   //   path: '/recipeinfo/:id', // New route for RecipeInfo\r\n//   //   element: (\r\n//   //     <>\r\n//   //       <NavBar />\r\n//   //       <RecipeInfo />\r\n//   //     </>\r\n//   //   ),\r\n//   // },\r\n// ]);\r\n\r\n// function App() {\r\n//   const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n//   useEffect(() => {\r\n//     const verifySession = async () => {\r\n//       const sessionData = await checkSession();\r\n//       setIsLoggedIn(sessionData.isAuthenticated); // Assuming checkSession returns an object with isAuthenticated\r\n//     };\r\n//     verifySession();\r\n//   }, []);\r\n//   return (\r\n    \r\n//     <RouterProvider router={router} />\r\n\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport Home from './components/Home';\r\nimport NavBar from './components/Navbar'; \r\nimport AboutUs from './components/Aboutus';\r\nimport Confirm from './components/Confirm'; \r\nimport Login from './components/Login';\r\nimport Signup from './components/Signup';\r\nimport NorthIndian from './components/NorthIndian';\r\nimport SouthIndian from './components/SouthIndian';\r\nimport Continental from './components/Continental';\r\nimport Recipe from './components/Recipe';\r\nimport RecipeDetails from './components/RecipeDetails';\r\nimport { checkSession } from './sessionService';\r\n\r\nimport { createBrowserRouter, RouterProvider } from 'react-router-dom';\r\n\r\nconst router = createBrowserRouter([\r\n  {\r\n    path: '/',\r\n    element: (\r\n      <>\r\n        <NavBar isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn} />\r\n        <Home />\r\n      </>\r\n    ),\r\n  },\r\n  {\r\n    path: '/about',\r\n    element: (\r\n      <>\r\n        <NavBar isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn} />\r\n        <AboutUs />\r\n      </>\r\n    ),\r\n  },\r\n  {\r\n    path: '/recipes/:id',\r\n    element: (\r\n      <>\r\n        <NavBar isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn} />\r\n        <Confirm />\r\n      </>\r\n    ),\r\n  },\r\n  {\r\n    path: '/recipes/:category/:id',\r\n    element: (\r\n      <>\r\n        <NavBar isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn} />\r\n        <RecipeDetails />\r\n      </>\r\n    ),\r\n  },\r\n  {\r\n    path: '/login',\r\n    element: (\r\n      <>\r\n        <NavBar isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn} />\r\n        <Login />\r\n      </>\r\n    ),\r\n  },\r\n  {\r\n    path: '/signup',\r\n    element: (\r\n      <>\r\n        <NavBar isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn} />\r\n        <Signup />\r\n      </>\r\n    ),\r\n  },\r\n  {\r\n    path: '/north',\r\n    element: (\r\n      <>\r\n        <NavBar isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn} />\r\n        <NorthIndian />\r\n      </>\r\n    ),\r\n  },\r\n  {\r\n    path: '/south',\r\n    element: (\r\n      <>\r\n        <NavBar isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn} />\r\n        <SouthIndian />\r\n      </>\r\n    ),\r\n  },\r\n  {\r\n    path: '/continental',\r\n    element: (\r\n      <>\r\n        <NavBar isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn} />\r\n        <Continental />\r\n      </>\r\n    ),\r\n  },\r\n  {\r\n    path: '/recipe',\r\n    element: (\r\n      <>\r\n        <NavBar isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn} />\r\n        <Recipe />\r\n      </>\r\n    ),\r\n  },\r\n]);\r\n\r\nfunction App() {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const verifySession = async () => {\r\n      const sessionData = await checkSession();\r\n      setIsLoggedIn(sessionData.isAuthenticated); // Assuming checkSession returns an object with isAuthenticated\r\n    };\r\n    verifySession();\r\n  }, []);\r\n\r\n  return (\r\n    <RouterProvider router={router} />\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAQA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,aAAa,MAAM,4BAA4B;AACtD,SAASC,YAAY,QAAQ,kBAAkB;AAE/C,SAASC,mBAAmB,EAAEC,cAAc,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEvE,MAAMC,MAAM,GAAGN,mBAAmB,CAAC,CACjC;EACEO,IAAI,EAAE,GAAG;EACTC,OAAO,eACLL,OAAA,CAAAE,SAAA;IAAAI,QAAA,gBACEN,OAAA,CAACd,MAAM;MAACqB,UAAU,EAAEA,UAAW;MAACC,aAAa,EAAEA;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChEZ,OAAA,CAACf,IAAI;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACR;AAEN,CAAC,EACD;EACER,IAAI,EAAE,QAAQ;EACdC,OAAO,eACLL,OAAA,CAAAE,SAAA;IAAAI,QAAA,gBACEN,OAAA,CAACd,MAAM;MAACqB,UAAU,EAAEA,UAAW;MAACC,aAAa,EAAEA;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChEZ,OAAA,CAACb,OAAO;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACX;AAEN,CAAC,EACD;EACER,IAAI,EAAE,cAAc;EACpBC,OAAO,eACLL,OAAA,CAAAE,SAAA;IAAAI,QAAA,gBACEN,OAAA,CAACd,MAAM;MAACqB,UAAU,EAAEA,UAAW;MAACC,aAAa,EAAEA;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChEZ,OAAA,CAACZ,OAAO;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACX;AAEN,CAAC,EACD;EACER,IAAI,EAAE,wBAAwB;EAC9BC,OAAO,eACLL,OAAA,CAAAE,SAAA;IAAAI,QAAA,gBACEN,OAAA,CAACd,MAAM;MAACqB,UAAU,EAAEA,UAAW;MAACC,aAAa,EAAEA;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChEZ,OAAA,CAACL,aAAa;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACjB;AAEN,CAAC,EACD;EACER,IAAI,EAAE,QAAQ;EACdC,OAAO,eACLL,OAAA,CAAAE,SAAA;IAAAI,QAAA,gBACEN,OAAA,CAACd,MAAM;MAACqB,UAAU,EAAEA,UAAW;MAACC,aAAa,EAAEA;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChEZ,OAAA,CAACX,KAAK;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACT;AAEN,CAAC,EACD;EACER,IAAI,EAAE,SAAS;EACfC,OAAO,eACLL,OAAA,CAAAE,SAAA;IAAAI,QAAA,gBACEN,OAAA,CAACd,MAAM;MAACqB,UAAU,EAAEA,UAAW;MAACC,aAAa,EAAEA;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChEZ,OAAA,CAACV,MAAM;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACV;AAEN,CAAC,EACD;EACER,IAAI,EAAE,QAAQ;EACdC,OAAO,eACLL,OAAA,CAAAE,SAAA;IAAAI,QAAA,gBACEN,OAAA,CAACd,MAAM;MAACqB,UAAU,EAAEA,UAAW;MAACC,aAAa,EAAEA;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChEZ,OAAA,CAACT,WAAW;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACf;AAEN,CAAC,EACD;EACER,IAAI,EAAE,QAAQ;EACdC,OAAO,eACLL,OAAA,CAAAE,SAAA;IAAAI,QAAA,gBACEN,OAAA,CAACd,MAAM;MAACqB,UAAU,EAAEA,UAAW;MAACC,aAAa,EAAEA;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChEZ,OAAA,CAACR,WAAW;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACf;AAEN,CAAC,EACD;EACER,IAAI,EAAE,cAAc;EACpBC,OAAO,eACLL,OAAA,CAAAE,SAAA;IAAAI,QAAA,gBACEN,OAAA,CAACd,MAAM;MAACqB,UAAU,EAAEA,UAAW;MAACC,aAAa,EAAEA;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChEZ,OAAA,CAACP,WAAW;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACf;AAEN,CAAC,EACD;EACER,IAAI,EAAE,SAAS;EACfC,OAAO,eACLL,OAAA,CAAAE,SAAA;IAAAI,QAAA,gBACEN,OAAA,CAACd,MAAM;MAACqB,UAAU,EAAEA,UAAW;MAACC,aAAa,EAAEA;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChEZ,OAAA,CAACN,MAAM;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACV;AAEN,CAAC,CACF,CAAC;AAEF,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACP,UAAU,EAAEC,aAAa,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACd,MAAM+B,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,MAAMC,WAAW,GAAG,MAAMpB,YAAY,CAAC,CAAC;MACxCY,aAAa,CAACQ,WAAW,CAACC,eAAe,CAAC,CAAC,CAAC;IAC9C,CAAC;IACDF,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEf,OAAA,CAACF,cAAc;IAACK,MAAM,EAAEA;EAAO;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAEtC;AAACE,EAAA,CAdQD,GAAG;AAAAK,EAAA,GAAHL,GAAG;AAgBZ,eAAeA,GAAG;AAAC,IAAAK,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}