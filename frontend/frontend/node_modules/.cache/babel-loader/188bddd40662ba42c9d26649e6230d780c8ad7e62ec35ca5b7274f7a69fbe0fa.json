{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ROG\\\\OneDrive\\\\Desktop\\\\recipe\\\\frontend\\\\frontend\\\\src\\\\components\\\\RecipeDetails.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import { useParams } from 'react-router-dom';\n\n// const RecipeDetails = () => {\n//   const { id } = useParams(); // Get recipe ID from URL params\n//   const [recipe, setRecipe] = useState({ name: \"\", description: \"\", ingredients: [], directions: \"\" });\n//   const [isEditing, setIsEditing] = useState(false); // State to toggle edit mode\n//   const [updatedRecipe, setUpdatedRecipe] = useState({ name: \"\", description: \"\", ingredients: [], directions: \"\" }); // State to hold updated data\n\n//   useEffect(() => {\n//     axios\n//       .get(`http://localhost:4000/api/recipes/category/${id}`)\n//       .then((response) => {\n//         setRecipe(response.data);            // Sets the main recipe data\n//         setUpdatedRecipe(response.data);     // Initializes updatedRecipe with fetched data\n//       })\n//       .catch((error) => {\n//         console.error('Error fetching recipe details:', error);\n//       });\n//   }, [id]);\n\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setUpdatedRecipe((prev) => ({\n//       ...prev,\n//       [name]: name === \"ingredients\" ? value.split('\\n') : value // Convert ingredients textarea input to array\n//     }));\n//   };\n\n//   const handleUpdate = () => {\n//     axios\n//       .patch(`http://localhost:4000/api/recipes/${id}`, updatedRecipe)\n//       .then((response) => {\n//         setRecipe(response.data); // Use backend response to set recipe\n//         setIsEditing(false);      // Exit edit mode\n//       })\n//       .catch((error) => {\n//         console.error('Error updating recipe:', error);\n//       });\n//   };\n\n//   if (!recipe) {\n//     return <div>Loading...</div>;\n//   }\n\n//   return (\n//     <div className=\"container mt-5 p-4\" style={{ maxWidth: \"700px\", border: \"1px solid #ddd\", borderRadius: \"8px\", boxShadow: \"0 4px 12px rgba(0, 0, 0, 0.1)\", backgroundColor: \"#fff\" }}>\n//       {isEditing ? (\n//         <>\n//           <input\n//             type=\"text\"\n//             name=\"name\"\n//             value={updatedRecipe.name}\n//             onChange={handleInputChange}\n//             style={{ fontSize: \"2.8rem\", fontWeight: \"bold\", color: \"#333\", width: \"100%\", marginBottom: \"1rem\" }}\n//           />\n//           <textarea\n//             name=\"description\"\n//             value={updatedRecipe.description}\n//             onChange={handleInputChange}\n//             style={{ fontSize: \"1.2rem\", fontWeight: \"500\", color: \"#555\", lineHeight: \"1.6\", width: \"100%\", height: \"80px\" }}\n//           />\n//           <h3 style={{ fontSize: \"1.6rem\", fontWeight: \"bold\", color: \"#333\", marginTop: \"2rem\" }}>Ingredients</h3>\n//           <textarea\n//             name=\"ingredients\"\n//             value={updatedRecipe.ingredients.join('\\n')}\n//             onChange={handleInputChange}\n//             style={{ fontSize: \"1.1rem\", fontWeight: \"500\", color: \"#444\", width: \"100%\", height: \"100px\" }}\n//           />\n//           <h3 style={{ fontSize: \"1.6rem\", fontWeight: \"bold\", color: \"#333\", marginTop: \"2rem\" }}>Directions</h3>\n//           <textarea\n//             name=\"directions\"\n//             value={updatedRecipe.directions}\n//             onChange={handleInputChange}\n//             style={{ fontSize: \"1.2rem\", fontWeight: \"500\", color: \"#555\", lineHeight: \"1.6\", width: \"100%\", height: \"120px\" }}\n//           />\n//         </>\n//       ) : (\n//         <>\n//           <h1 style={{ fontSize: \"2.8rem\", fontWeight: \"bold\", color: \"#333\", marginBottom: \"1rem\" }}>{recipe.name}</h1>\n//           <p style={{ fontSize: \"1.2rem\", fontWeight: \"500\", color: \"#555\", lineHeight: \"1.6\" }}>{recipe.description}</p>\n//           <h3 style={{ fontSize: \"1.6rem\", fontWeight: \"bold\", color: \"#333\", marginTop: \"2rem\" }}>Ingredients</h3>\n//           <ul style={{ listStyleType: \"disc\", paddingLeft: \"1.5rem\", color: \"#444\" }}>\n//             {recipe.ingredients.map((ingredient, index) => (\n//               <li key={index} style={{ fontSize: \"1.1rem\", fontWeight: \"500\", marginBottom: \"0.5rem\" }}>{ingredient}</li>\n//             ))}\n//           </ul>\n//           <h3 style={{ fontSize: \"1.6rem\", fontWeight: \"bold\", color: \"#333\", marginTop: \"2rem\" }}>Directions</h3>\n//           <p style={{ fontSize: \"1.2rem\", fontWeight: \"500\", color: \"#555\", lineHeight: \"1.6\" }}>{recipe.directions}</p>\n//         </>\n//       )}\n\n//       <div style={{ display: \"flex\", justifyContent: \"flex-start\", marginTop: \"2rem\" }}>\n//         {isEditing ? (\n//           <button\n//             onClick={handleUpdate}\n//             style={{ backgroundColor: \"#28a745\", color: \"#fff\", border: \"none\", padding: \"0.6rem 1.2rem\", borderRadius: \"4px\", cursor: \"pointer\", fontSize: \"1.1rem\", fontWeight: \"600\", marginRight: \"1rem\" }}\n//           >\n//             Save\n//           </button>\n//         ) : (\n//           <button\n//             onClick={() => setIsEditing(true)}\n//             style={{ backgroundColor: \"#007bff\", color: \"#fff\", border: \"none\", padding: \"0.6rem 1.2rem\", borderRadius: \"4px\", cursor: \"pointer\", fontSize: \"1.1rem\", fontWeight: \"600\" }}\n//           >\n//             Update\n//           </button>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default RecipeDetails;\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useParams, useNavigate } from 'react-router-dom'; // import useNavigate\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RecipeDetails = () => {\n  _s();\n  const {\n    category,\n    id\n  } = useParams(); // Get both category and id\n  const navigate = useNavigate(); // Initialize navigate\n  const [recipe, setRecipe] = useState({\n    name: \"\",\n    description: \"\",\n    ingredients: [],\n    directions: \"\"\n  });\n  const [isEditing, setIsEditing] = useState(false);\n  const [updatedRecipe, setUpdatedRecipe] = useState({\n    name: \"\",\n    description: \"\",\n    ingredients: [],\n    directions: \"\"\n  });\n  useEffect(() => {\n    axios.get(`http://localhost:4000/api/recipes/${category}/${id}`).then(response => {\n      setRecipe(response.data);\n      setUpdatedRecipe(response.data);\n    }).catch(error => {\n      console.error('Error fetching recipe details:', error);\n    });\n  }, [category, id]);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUpdatedRecipe(prev => ({\n      ...prev,\n      [name]: name === \"ingredients\" ? value.split('\\n') : value\n    }));\n  };\n  const handleUpdate = () => {\n    axios.patch(`http://localhost:4000/api/recipes/${id}`, updatedRecipe).then(response => {\n      setRecipe(response.data);\n      setIsEditing(false);\n      navigate(`/recipes/${id}`); // Redirect to /recipes/:id\n    }).catch(error => {\n      console.error('Error updating recipe:', error);\n    });\n  };\n  if (!recipe) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5 p-4\",\n    style: {\n      maxWidth: \"700px\",\n      border: \"1px solid #ddd\",\n      borderRadius: \"8px\",\n      boxShadow: \"0 4px 12px rgba(0, 0, 0, 0.1)\",\n      backgroundColor: \"#fff\"\n    },\n    children: [isEditing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: updatedRecipe.name,\n        onChange: handleInputChange,\n        style: {\n          fontSize: \"2.8rem\",\n          fontWeight: \"bold\",\n          color: \"#333\",\n          width: \"100%\",\n          marginBottom: \"1rem\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"description\",\n        value: updatedRecipe.description,\n        onChange: handleInputChange,\n        style: {\n          fontSize: \"1.2rem\",\n          fontWeight: \"500\",\n          color: \"#555\",\n          lineHeight: \"1.6\",\n          width: \"100%\",\n          height: \"80px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          fontSize: \"1.6rem\",\n          fontWeight: \"bold\",\n          color: \"#333\",\n          marginTop: \"2rem\"\n        },\n        children: \"Ingredients\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"ingredients\",\n        value: updatedRecipe.ingredients.join('\\n'),\n        onChange: handleInputChange,\n        style: {\n          fontSize: \"1.1rem\",\n          fontWeight: \"500\",\n          color: \"#444\",\n          width: \"100%\",\n          height: \"100px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          fontSize: \"1.6rem\",\n          fontWeight: \"bold\",\n          color: \"#333\",\n          marginTop: \"2rem\"\n        },\n        children: \"Directions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"directions\",\n        value: updatedRecipe.directions,\n        onChange: handleInputChange,\n        style: {\n          fontSize: \"1.2rem\",\n          fontWeight: \"500\",\n          color: \"#555\",\n          lineHeight: \"1.6\",\n          width: \"100%\",\n          height: \"120px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          fontSize: \"2.8rem\",\n          fontWeight: \"bold\",\n          color: \"#333\",\n          marginBottom: \"1rem\"\n        },\n        children: recipe.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: \"1.2rem\",\n          fontWeight: \"500\",\n          color: \"#555\",\n          lineHeight: \"1.6\"\n        },\n        children: recipe.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          fontSize: \"1.6rem\",\n          fontWeight: \"bold\",\n          color: \"#333\",\n          marginTop: \"2rem\"\n        },\n        children: \"Ingredients\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          listStyleType: \"disc\",\n          paddingLeft: \"1.5rem\",\n          color: \"#444\"\n        },\n        children: recipe.ingredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            fontSize: \"1.1rem\",\n            fontWeight: \"500\",\n            marginBottom: \"0.5rem\"\n          },\n          children: ingredient\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          fontSize: \"1.6rem\",\n          fontWeight: \"bold\",\n          color: \"#333\",\n          marginTop: \"2rem\"\n        },\n        children: \"Directions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: \"1.2rem\",\n          fontWeight: \"500\",\n          color: \"#555\",\n          lineHeight: \"1.6\"\n        },\n        children: recipe.directions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        marginTop: \"2rem\"\n      },\n      children: isEditing ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpdate,\n        style: {\n          backgroundColor: \"#28a745\",\n          color: \"#fff\",\n          border: \"none\",\n          padding: \"0.6rem 1.2rem\",\n          borderRadius: \"4px\",\n          cursor: \"pointer\",\n          fontSize: \"1.1rem\",\n          fontWeight: \"600\",\n          marginRight: \"1rem\"\n        },\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsEditing(true),\n        style: {\n          backgroundColor: \"#007bff\",\n          color: \"#fff\",\n          border: \"none\",\n          padding: \"0.6rem 1.2rem\",\n          borderRadius: \"4px\",\n          cursor: \"pointer\",\n          fontSize: \"1.1rem\",\n          fontWeight: \"600\"\n        },\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n};\n_s(RecipeDetails, \"NsLegBLPRbdVNWMjVl2uXYJ2bl8=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = RecipeDetails;\nexport default RecipeDetails;\nvar _c;\n$RefreshReg$(_c, \"RecipeDetails\");","map":{"version":3,"names":["React","useEffect","useState","axios","useParams","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","RecipeDetails","_s","category","id","navigate","recipe","setRecipe","name","description","ingredients","directions","isEditing","setIsEditing","updatedRecipe","setUpdatedRecipe","get","then","response","data","catch","error","console","handleInputChange","e","value","target","prev","split","handleUpdate","patch","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","maxWidth","border","borderRadius","boxShadow","backgroundColor","type","onChange","fontSize","fontWeight","color","width","marginBottom","lineHeight","height","marginTop","join","listStyleType","paddingLeft","map","ingredient","index","display","justifyContent","onClick","padding","cursor","marginRight","_c","$RefreshReg$"],"sources":["C:/Users/ROG/OneDrive/Desktop/recipe/frontend/frontend/src/components/RecipeDetails.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import axios from 'axios';\r\n// import { useParams } from 'react-router-dom';\r\n\r\n// const RecipeDetails = () => {\r\n//   const { id } = useParams(); // Get recipe ID from URL params\r\n//   const [recipe, setRecipe] = useState({ name: \"\", description: \"\", ingredients: [], directions: \"\" });\r\n//   const [isEditing, setIsEditing] = useState(false); // State to toggle edit mode\r\n//   const [updatedRecipe, setUpdatedRecipe] = useState({ name: \"\", description: \"\", ingredients: [], directions: \"\" }); // State to hold updated data\r\n\r\n//   useEffect(() => {\r\n//     axios\r\n//       .get(`http://localhost:4000/api/recipes/category/${id}`)\r\n//       .then((response) => {\r\n//         setRecipe(response.data);            // Sets the main recipe data\r\n//         setUpdatedRecipe(response.data);     // Initializes updatedRecipe with fetched data\r\n//       })\r\n//       .catch((error) => {\r\n//         console.error('Error fetching recipe details:', error);\r\n//       });\r\n//   }, [id]);\r\n\r\n//   const handleInputChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setUpdatedRecipe((prev) => ({\r\n//       ...prev,\r\n//       [name]: name === \"ingredients\" ? value.split('\\n') : value // Convert ingredients textarea input to array\r\n//     }));\r\n//   };\r\n\r\n//   const handleUpdate = () => {\r\n//     axios\r\n//       .patch(`http://localhost:4000/api/recipes/${id}`, updatedRecipe)\r\n//       .then((response) => {\r\n//         setRecipe(response.data); // Use backend response to set recipe\r\n//         setIsEditing(false);      // Exit edit mode\r\n//       })\r\n//       .catch((error) => {\r\n//         console.error('Error updating recipe:', error);\r\n//       });\r\n//   };\r\n\r\n//   if (!recipe) {\r\n//     return <div>Loading...</div>;\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"container mt-5 p-4\" style={{ maxWidth: \"700px\", border: \"1px solid #ddd\", borderRadius: \"8px\", boxShadow: \"0 4px 12px rgba(0, 0, 0, 0.1)\", backgroundColor: \"#fff\" }}>\r\n//       {isEditing ? (\r\n//         <>\r\n//           <input\r\n//             type=\"text\"\r\n//             name=\"name\"\r\n//             value={updatedRecipe.name}\r\n//             onChange={handleInputChange}\r\n//             style={{ fontSize: \"2.8rem\", fontWeight: \"bold\", color: \"#333\", width: \"100%\", marginBottom: \"1rem\" }}\r\n//           />\r\n//           <textarea\r\n//             name=\"description\"\r\n//             value={updatedRecipe.description}\r\n//             onChange={handleInputChange}\r\n//             style={{ fontSize: \"1.2rem\", fontWeight: \"500\", color: \"#555\", lineHeight: \"1.6\", width: \"100%\", height: \"80px\" }}\r\n//           />\r\n//           <h3 style={{ fontSize: \"1.6rem\", fontWeight: \"bold\", color: \"#333\", marginTop: \"2rem\" }}>Ingredients</h3>\r\n//           <textarea\r\n//             name=\"ingredients\"\r\n//             value={updatedRecipe.ingredients.join('\\n')}\r\n//             onChange={handleInputChange}\r\n//             style={{ fontSize: \"1.1rem\", fontWeight: \"500\", color: \"#444\", width: \"100%\", height: \"100px\" }}\r\n//           />\r\n//           <h3 style={{ fontSize: \"1.6rem\", fontWeight: \"bold\", color: \"#333\", marginTop: \"2rem\" }}>Directions</h3>\r\n//           <textarea\r\n//             name=\"directions\"\r\n//             value={updatedRecipe.directions}\r\n//             onChange={handleInputChange}\r\n//             style={{ fontSize: \"1.2rem\", fontWeight: \"500\", color: \"#555\", lineHeight: \"1.6\", width: \"100%\", height: \"120px\" }}\r\n//           />\r\n//         </>\r\n//       ) : (\r\n//         <>\r\n//           <h1 style={{ fontSize: \"2.8rem\", fontWeight: \"bold\", color: \"#333\", marginBottom: \"1rem\" }}>{recipe.name}</h1>\r\n//           <p style={{ fontSize: \"1.2rem\", fontWeight: \"500\", color: \"#555\", lineHeight: \"1.6\" }}>{recipe.description}</p>\r\n//           <h3 style={{ fontSize: \"1.6rem\", fontWeight: \"bold\", color: \"#333\", marginTop: \"2rem\" }}>Ingredients</h3>\r\n//           <ul style={{ listStyleType: \"disc\", paddingLeft: \"1.5rem\", color: \"#444\" }}>\r\n//             {recipe.ingredients.map((ingredient, index) => (\r\n//               <li key={index} style={{ fontSize: \"1.1rem\", fontWeight: \"500\", marginBottom: \"0.5rem\" }}>{ingredient}</li>\r\n//             ))}\r\n//           </ul>\r\n//           <h3 style={{ fontSize: \"1.6rem\", fontWeight: \"bold\", color: \"#333\", marginTop: \"2rem\" }}>Directions</h3>\r\n//           <p style={{ fontSize: \"1.2rem\", fontWeight: \"500\", color: \"#555\", lineHeight: \"1.6\" }}>{recipe.directions}</p>\r\n//         </>\r\n//       )}\r\n\r\n//       <div style={{ display: \"flex\", justifyContent: \"flex-start\", marginTop: \"2rem\" }}>\r\n//         {isEditing ? (\r\n//           <button\r\n//             onClick={handleUpdate}\r\n//             style={{ backgroundColor: \"#28a745\", color: \"#fff\", border: \"none\", padding: \"0.6rem 1.2rem\", borderRadius: \"4px\", cursor: \"pointer\", fontSize: \"1.1rem\", fontWeight: \"600\", marginRight: \"1rem\" }}\r\n//           >\r\n//             Save\r\n//           </button>\r\n//         ) : (\r\n//           <button\r\n//             onClick={() => setIsEditing(true)}\r\n//             style={{ backgroundColor: \"#007bff\", color: \"#fff\", border: \"none\", padding: \"0.6rem 1.2rem\", borderRadius: \"4px\", cursor: \"pointer\", fontSize: \"1.1rem\", fontWeight: \"600\" }}\r\n//           >\r\n//             Update\r\n//           </button>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default RecipeDetails;\r\n\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams, useNavigate } from 'react-router-dom'; // import useNavigate\r\n\r\nconst RecipeDetails = () => {\r\n  const { category, id } = useParams(); // Get both category and id\r\n  const navigate = useNavigate(); // Initialize navigate\r\n  const [recipe, setRecipe] = useState({ name: \"\", description: \"\", ingredients: [], directions: \"\" });\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [updatedRecipe, setUpdatedRecipe] = useState({ name: \"\", description: \"\", ingredients: [], directions: \"\" });\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`http://localhost:4000/api/recipes/${category}/${id}`)\r\n      .then((response) => {\r\n        setRecipe(response.data);\r\n        setUpdatedRecipe(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching recipe details:', error);\r\n      });\r\n  }, [category, id]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUpdatedRecipe((prev) => ({\r\n      ...prev,\r\n      [name]: name === \"ingredients\" ? value.split('\\n') : value\r\n    }));\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    axios\r\n      .patch(`http://localhost:4000/api/recipes/${id}`, updatedRecipe)\r\n      .then((response) => {\r\n        setRecipe(response.data);\r\n        setIsEditing(false);\r\n        navigate(`/recipes/${id}`); // Redirect to /recipes/:id\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error updating recipe:', error);\r\n      });\r\n  };\r\n\r\n  if (!recipe) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-5 p-4\" style={{ maxWidth: \"700px\", border: \"1px solid #ddd\", borderRadius: \"8px\", boxShadow: \"0 4px 12px rgba(0, 0, 0, 0.1)\", backgroundColor: \"#fff\" }}>\r\n      {isEditing ? (\r\n        <>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={updatedRecipe.name}\r\n            onChange={handleInputChange}\r\n            style={{ fontSize: \"2.8rem\", fontWeight: \"bold\", color: \"#333\", width: \"100%\", marginBottom: \"1rem\" }}\r\n          />\r\n          <textarea\r\n            name=\"description\"\r\n            value={updatedRecipe.description}\r\n            onChange={handleInputChange}\r\n            style={{ fontSize: \"1.2rem\", fontWeight: \"500\", color: \"#555\", lineHeight: \"1.6\", width: \"100%\", height: \"80px\" }}\r\n          />\r\n          <h3 style={{ fontSize: \"1.6rem\", fontWeight: \"bold\", color: \"#333\", marginTop: \"2rem\" }}>Ingredients</h3>\r\n          <textarea\r\n            name=\"ingredients\"\r\n            value={updatedRecipe.ingredients.join('\\n')}\r\n            onChange={handleInputChange}\r\n            style={{ fontSize: \"1.1rem\", fontWeight: \"500\", color: \"#444\", width: \"100%\", height: \"100px\" }}\r\n          />\r\n          <h3 style={{ fontSize: \"1.6rem\", fontWeight: \"bold\", color: \"#333\", marginTop: \"2rem\" }}>Directions</h3>\r\n          <textarea\r\n            name=\"directions\"\r\n            value={updatedRecipe.directions}\r\n            onChange={handleInputChange}\r\n            style={{ fontSize: \"1.2rem\", fontWeight: \"500\", color: \"#555\", lineHeight: \"1.6\", width: \"100%\", height: \"120px\" }}\r\n          />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h1 style={{ fontSize: \"2.8rem\", fontWeight: \"bold\", color: \"#333\", marginBottom: \"1rem\" }}>{recipe.name}</h1>\r\n          <p style={{ fontSize: \"1.2rem\", fontWeight: \"500\", color: \"#555\", lineHeight: \"1.6\" }}>{recipe.description}</p>\r\n          <h3 style={{ fontSize: \"1.6rem\", fontWeight: \"bold\", color: \"#333\", marginTop: \"2rem\" }}>Ingredients</h3>\r\n          <ul style={{ listStyleType: \"disc\", paddingLeft: \"1.5rem\", color: \"#444\" }}>\r\n            {recipe.ingredients.map((ingredient, index) => (\r\n              <li key={index} style={{ fontSize: \"1.1rem\", fontWeight: \"500\", marginBottom: \"0.5rem\" }}>{ingredient}</li>\r\n            ))}\r\n          </ul>\r\n          <h3 style={{ fontSize: \"1.6rem\", fontWeight: \"bold\", color: \"#333\", marginTop: \"2rem\" }}>Directions</h3>\r\n          <p style={{ fontSize: \"1.2rem\", fontWeight: \"500\", color: \"#555\", lineHeight: \"1.6\" }}>{recipe.directions}</p>\r\n        </>\r\n      )}\r\n\r\n      <div style={{ display: \"flex\", justifyContent: \"flex-start\", marginTop: \"2rem\" }}>\r\n        {isEditing ? (\r\n          <button\r\n            onClick={handleUpdate}\r\n            style={{ backgroundColor: \"#28a745\", color: \"#fff\", border: \"none\", padding: \"0.6rem 1.2rem\", borderRadius: \"4px\", cursor: \"pointer\", fontSize: \"1.1rem\", fontWeight: \"600\", marginRight: \"1rem\" }}\r\n          >\r\n            Save\r\n          </button>\r\n        ) : (\r\n          <button\r\n            onClick={() => setIsEditing(true)}\r\n            style={{ backgroundColor: \"#007bff\", color: \"#fff\", border: \"none\", padding: \"0.6rem 1.2rem\", borderRadius: \"4px\", cursor: \"pointer\", fontSize: \"1.1rem\", fontWeight: \"600\" }}\r\n          >\r\n            Update\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecipeDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}