{"ast":null,"code":"// import React, { useState } from 'react';\n// import { Link, useNavigate, useLocation } from 'react-router-dom';\n\n// function NavBar() {\n//   const [query, setQuery] = useState('');\n//   const [suggestions, setSuggestions] = useState([]);\n//   const navigate = useNavigate();\n//   const location = useLocation(); // Get the current path\n\n//   // List of available search terms\n//   const options = [\"North\", \"Continental\", \"South\", \"About\", \"Login\"];\n\n//   // Handle search input changes\n//   const handleInputChange = (event) => {\n//     const value = event.target.value;\n//     setQuery(value);\n\n//     // Filter suggestions based on the input\n//     if (value) {\n//       const filteredSuggestions = options.filter(option =>\n//         option.toLowerCase().includes(value.toLowerCase())\n//       );\n//       setSuggestions(filteredSuggestions);\n//     } else {\n//       setSuggestions([]);\n//     }\n//   };\n\n//   // Handle form submission\n//   const handleSearch = (event) => {\n//     event.preventDefault();\n//     if (query.trim()) {\n//       navigate(`/${query.trim().toLowerCase()}`);\n//       setSuggestions([]); // Clear suggestions after search\n//     }\n//   };\n\n//   // Handle suggestion click\n//   const handleSuggestionClick = (suggestion) => {\n//     setQuery(suggestion); // Set query to the selected suggestion\n//     navigate(`/${suggestion.toLowerCase()}`);\n//     setSuggestions([]); // Clear suggestions after selection\n//   };\n\n//   // Function to determine if a link is active\n//   const isActive = (path) => location.pathname === path ? \"btn-outline-success text-success\" : \"text-white\";\n\n//   return (\n//     <nav className=\"navbar navbar-expand-lg bg-black border-bottom border-body\" data-bs-theme=\"dark\">\n//       <div className=\"container-fluid\">\n//         <Link className=\"navbar-brand\" to=\"/\">Sharipe</Link>\n//         <div className=\"d-flex align-items-center\">\n//           <ul className=\"navbar-nav me-auto mb-2 mb-lg-0 d-flex flex-row\">\n//             <li className=\"nav-item\">\n//               <Link className={`nav-link mx-2 ${isActive('/')}`} aria-current=\"page\" to=\"/\">Home</Link>\n//             </li>\n//             <li className=\"nav-item\">\n//               <Link className={`nav-link mx-2 ${isActive('/about')}`} to=\"/about\">About Us</Link>\n//             </li>\n//             <li className=\"nav-item\">\n//               <Link className={`nav-link mx-2 ${isActive('/login')}`} to=\"/login\">Login</Link>\n//             </li>\n//           </ul>\n//           <form className=\"d-flex position-relative\" role=\"search\" onSubmit={handleSearch}>\n//             <input\n//               className=\"form-control me-2\"\n//               type=\"search\"\n//               placeholder=\"Search\"\n//               aria-label=\"Search\"\n//               value={query}\n//               onChange={handleInputChange}\n//             />\n//             <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\n\n//             {/* Display suggestions */}\n//             {suggestions.length > 0 && (\n//               <ul className=\"list-group position-absolute\" style={{ top: '100%', zIndex: 1000, width: '100%' }}>\n//                 {suggestions.map((suggestion, index) => (\n//                   <li\n//                     key={index}\n//                     className=\"list-group-item list-group-item-action\"\n//                     onClick={() => handleSuggestionClick(suggestion)}\n//                     style={{ cursor: 'pointer' }}\n//                   >\n//                     {suggestion}\n//                   </li>\n//                 ))}\n//               </ul>\n//             )}\n//           </form>\n//         </div>\n//       </div>\n//     </nav>\n//   );\n// }\n\n// export default NavBar;","map":{"version":3,"names":[],"sources":["C:/Users/ROG/OneDrive/Desktop/recipe/frontend/frontend/src/components/Navbar.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { Link, useNavigate, useLocation } from 'react-router-dom';\r\n\r\n// function NavBar() {\r\n//   const [query, setQuery] = useState('');\r\n//   const [suggestions, setSuggestions] = useState([]);\r\n//   const navigate = useNavigate();\r\n//   const location = useLocation(); // Get the current path\r\n\r\n//   // List of available search terms\r\n//   const options = [\"North\", \"Continental\", \"South\", \"About\", \"Login\"];\r\n\r\n//   // Handle search input changes\r\n//   const handleInputChange = (event) => {\r\n//     const value = event.target.value;\r\n//     setQuery(value);\r\n\r\n//     // Filter suggestions based on the input\r\n//     if (value) {\r\n//       const filteredSuggestions = options.filter(option =>\r\n//         option.toLowerCase().includes(value.toLowerCase())\r\n//       );\r\n//       setSuggestions(filteredSuggestions);\r\n//     } else {\r\n//       setSuggestions([]);\r\n//     }\r\n//   };\r\n\r\n//   // Handle form submission\r\n//   const handleSearch = (event) => {\r\n//     event.preventDefault();\r\n//     if (query.trim()) {\r\n//       navigate(`/${query.trim().toLowerCase()}`);\r\n//       setSuggestions([]); // Clear suggestions after search\r\n//     }\r\n//   };\r\n\r\n//   // Handle suggestion click\r\n//   const handleSuggestionClick = (suggestion) => {\r\n//     setQuery(suggestion); // Set query to the selected suggestion\r\n//     navigate(`/${suggestion.toLowerCase()}`);\r\n//     setSuggestions([]); // Clear suggestions after selection\r\n//   };\r\n\r\n//   // Function to determine if a link is active\r\n//   const isActive = (path) => location.pathname === path ? \"btn-outline-success text-success\" : \"text-white\";\r\n\r\n//   return (\r\n//     <nav className=\"navbar navbar-expand-lg bg-black border-bottom border-body\" data-bs-theme=\"dark\">\r\n//       <div className=\"container-fluid\">\r\n//         <Link className=\"navbar-brand\" to=\"/\">Sharipe</Link>\r\n//         <div className=\"d-flex align-items-center\">\r\n//           <ul className=\"navbar-nav me-auto mb-2 mb-lg-0 d-flex flex-row\">\r\n//             <li className=\"nav-item\">\r\n//               <Link className={`nav-link mx-2 ${isActive('/')}`} aria-current=\"page\" to=\"/\">Home</Link>\r\n//             </li>\r\n//             <li className=\"nav-item\">\r\n//               <Link className={`nav-link mx-2 ${isActive('/about')}`} to=\"/about\">About Us</Link>\r\n//             </li>\r\n//             <li className=\"nav-item\">\r\n//               <Link className={`nav-link mx-2 ${isActive('/login')}`} to=\"/login\">Login</Link>\r\n//             </li>\r\n//           </ul>\r\n//           <form className=\"d-flex position-relative\" role=\"search\" onSubmit={handleSearch}>\r\n//             <input\r\n//               className=\"form-control me-2\"\r\n//               type=\"search\"\r\n//               placeholder=\"Search\"\r\n//               aria-label=\"Search\"\r\n//               value={query}\r\n//               onChange={handleInputChange}\r\n//             />\r\n//             <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n\r\n//             {/* Display suggestions */}\r\n//             {suggestions.length > 0 && (\r\n//               <ul className=\"list-group position-absolute\" style={{ top: '100%', zIndex: 1000, width: '100%' }}>\r\n//                 {suggestions.map((suggestion, index) => (\r\n//                   <li\r\n//                     key={index}\r\n//                     className=\"list-group-item list-group-item-action\"\r\n//                     onClick={() => handleSuggestionClick(suggestion)}\r\n//                     style={{ cursor: 'pointer' }}\r\n//                   >\r\n//                     {suggestion}\r\n//                   </li>\r\n//                 ))}\r\n//               </ul>\r\n//             )}\r\n//           </form>\r\n//         </div>\r\n//       </div>\r\n//     </nav>\r\n//   );\r\n// }\r\n\r\n// export default NavBar;\r\n\r\n\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}