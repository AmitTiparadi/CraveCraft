{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ROG\\\\OneDrive\\\\Desktop\\\\recipe\\\\frontend\\\\frontend\\\\src\\\\components\\\\Navbar.js\",\n  _s = $RefreshSig$();\n// // import React, { useState } from 'react';\n// // import { Link, useNavigate, useLocation } from 'react-router-dom';\n\n// // function NavBar() {\n// //   const [query, setQuery] = useState('');\n// //   const [suggestions, setSuggestions] = useState([]);\n// //   const navigate = useNavigate();\n// //   const location = useLocation(); // Get the current path\n\n// //   // List of available search terms\n// //   const options = [\"North\", \"Continental\", \"South\", \"About\", \"Login\"];\n\n// //   // Handle search input changes\n// //   const handleInputChange = (event) => {\n// //     const value = event.target.value;\n// //     setQuery(value);\n\n// //     // Filter suggestions based on the input\n// //     if (value) {\n// //       const filteredSuggestions = options.filter(option =>\n// //         option.toLowerCase().includes(value.toLowerCase())\n// //       );\n// //       setSuggestions(filteredSuggestions);\n// //     } else {\n// //       setSuggestions([]);\n// //     }\n// //   };\n\n// //   // Handle form submission\n// //   const handleSearch = (event) => {\n// //     event.preventDefault();\n// //     if (query.trim()) {\n// //       navigate(`/${query.trim().toLowerCase()}`);\n// //       setSuggestions([]); // Clear suggestions after search\n// //     }\n// //   };\n\n// //   // Handle suggestion click\n// //   const handleSuggestionClick = (suggestion) => {\n// //     setQuery(suggestion); // Set query to the selected suggestion\n// //     navigate(`/${suggestion.toLowerCase()}`);\n// //     setSuggestions([]); // Clear suggestions after selection\n// //   };\n\n// //   // Function to determine if a link is active\n// //   const isActive = (path) => location.pathname === path ? \"btn-outline-success text-success\" : \"text-white\";\n\n// //   return (\n// //     <nav className=\"navbar navbar-expand-lg bg-black border-bottom border-body\" data-bs-theme=\"dark\">\n// //       <div className=\"container-fluid\">\n// //         <Link className=\"navbar-brand\" to=\"/\">Sharipe</Link>\n// //         <div className=\"d-flex align-items-center\">\n// //           <ul className=\"navbar-nav me-auto mb-2 mb-lg-0 d-flex flex-row\">\n// //             <li className=\"nav-item\">\n// //               <Link className={`nav-link mx-2 ${isActive('/')}`} aria-current=\"page\" to=\"/\">Home</Link>\n// //             </li>\n// //             <li className=\"nav-item\">\n// //               <Link className={`nav-link mx-2 ${isActive('/about')}`} to=\"/about\">About Us</Link>\n// //             </li>\n// //             <li className=\"nav-item\">\n// //               <Link className={`nav-link mx-2 ${isActive('/login')}`} to=\"/login\">Login</Link>\n// //             </li>\n// //           </ul>\n// //           <form className=\"d-flex position-relative\" role=\"search\" onSubmit={handleSearch}>\n// //             <input\n// //               className=\"form-control me-2\"\n// //               type=\"search\"\n// //               placeholder=\"Search\"\n// //               aria-label=\"Search\"\n// //               value={query}\n// //               onChange={handleInputChange}\n// //             />\n// //             <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\n\n// //             {/* Display suggestions */}\n// //             {suggestions.length > 0 && (\n// //               <ul className=\"list-group position-absolute\" style={{ top: '100%', zIndex: 1000, width: '100%' }}>\n// //                 {suggestions.map((suggestion, index) => (\n// //                   <li\n// //                     key={index}\n// //                     className=\"list-group-item list-group-item-action\"\n// //                     onClick={() => handleSuggestionClick(suggestion)}\n// //                     style={{ cursor: 'pointer' }}\n// //                   >\n// //                     {suggestion}\n// //                   </li>\n// //                 ))}\n// //               </ul>\n// //             )}\n// //           </form>\n// //         </div>\n// //       </div>\n// //     </nav>\n// //   );\n// // }\n\n// // export default NavBar;\n\n// import React, { useState } from 'react';\n// import { Link, useNavigate, useLocation } from 'react-router-dom';\n\n// function NavBar() {\n//   const [query, setQuery] = useState('');\n//   const [suggestions, setSuggestions] = useState([]);\n//   const [isLoggedIn, setIsLoggedIn] = useState(false); // Track login state\n//   const navigate = useNavigate();\n//   const location = useLocation();\n\n//   const options = [\"North\", \"Continental\", \"South\", \"About\", \"Login\"];\n\n//   const handleInputChange = (event) => {\n//     const value = event.target.value;\n//     setQuery(value);\n\n//     if (value) {\n//       const filteredSuggestions = options.filter(option =>\n//         option.toLowerCase().includes(value.toLowerCase())\n//       );\n//       setSuggestions(filteredSuggestions);\n//     } else {\n//       setSuggestions([]);\n//     }\n//   };\n\n//   const handleSearch = (event) => {\n//     event.preventDefault();\n//     if (query.trim()) {\n//       navigate(`/${query.trim().toLowerCase()}`);\n//       setSuggestions([]);\n//     }\n//   };\n\n//   const handleSuggestionClick = (suggestion) => {\n//     setQuery(suggestion);\n//     navigate(`/${suggestion.toLowerCase()}`);\n//     setSuggestions([]);\n//   };\n\n//   const isActive = (path) => location.pathname === path ? \"btn-outline-success text-success\" : \"text-white\";\n\n//   const handleLogout = () => {\n//     setIsLoggedIn(false); // Update state to log out\n//     // Additional logout logic (e.g., clearing tokens, session storage) can go here\n//     navigate('/');\n//   };\n\n//   const handleLogin = () => {\n//     // Example function to simulate login - in real usage, this would check credentials\n//     setIsLoggedIn(true);\n//   };\n\n//   return (\n//     <nav className=\"navbar navbar-expand-lg bg-black border-bottom border-body\" data-bs-theme=\"dark\">\n//       <div className=\"container-fluid\">\n//         <Link className=\"navbar-brand\" to=\"/\">Sharipe</Link>\n//         <div className=\"d-flex align-items-center\">\n//           <ul className=\"navbar-nav me-auto mb-2 mb-lg-0 d-flex flex-row\">\n//             <li className=\"nav-item\">\n//               <Link className={`nav-link mx-2 ${isActive('/')}`} aria-current=\"page\" to=\"/\">Home</Link>\n//             </li>\n//             <li className=\"nav-item\">\n//               <Link className={`nav-link mx-2 ${isActive('/about')}`} to=\"/about\">About Us</Link>\n//             </li>\n//             <li className=\"nav-item\">\n//               {isLoggedIn ? (\n//                 <div className=\"nav-item dropdown\">\n//                   <button\n//                     className=\"btn btn-outline-success rounded-circle\"\n//                     id=\"profileDropdown\"\n//                     data-bs-toggle=\"dropdown\"\n//                     aria-expanded=\"false\"\n//                   >\n//                     <img\n//                       src=\"default-profile.jpg\" // Use a default profile image here\n//                       alt=\"Profile\"\n//                       className=\"rounded-circle\"\n//                       style={{ width: \"30px\", height: \"30px\" }}\n//                     />\n//                   </button>\n//                   <ul className=\"dropdown-menu dropdown-menu-end\" aria-labelledby=\"profileDropdown\">\n//                     <li><button className=\"dropdown-item\" onClick={handleLogout}>Logout</button></li>\n//                     <li><button className=\"dropdown-item\">Delete Account</button></li>\n//                   </ul>\n//                 </div>\n//               ) : (\n//                 <Link className={`nav-link mx-2 ${isActive('/login')}`} to=\"/login\" onClick={handleLogin}>Login</Link>\n//               )}\n//             </li>\n//           </ul>\n//           <form className=\"d-flex position-relative\" role=\"search\" onSubmit={handleSearch}>\n//             <input\n//               className=\"form-control me-2\"\n//               type=\"search\"\n//               placeholder=\"Search\"\n//               aria-label=\"Search\"\n//               value={query}\n//               onChange={handleInputChange}\n//             />\n//             <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\n\n//             {suggestions.length > 0 && (\n//               <ul className=\"list-group position-absolute\" style={{ top: '100%', zIndex: 1000, width: '100%' }}>\n//                 {suggestions.map((suggestion, index) => (\n//                   <li\n//                     key={index}\n//                     className=\"list-group-item list-group-item-action\"\n//                     onClick={() => handleSuggestionClick(suggestion)}\n//                     style={{ cursor: 'pointer' }}\n//                   >\n//                     {suggestion}\n//                   </li>\n//                 ))}\n//               </ul>\n//             )}\n//           </form>\n//         </div>\n//       </div>\n//     </nav>\n//   );\n// }\n\n// export default NavBar;\n\nimport React, { useState } from 'react';\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\nimport './navr.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NavBar() {\n  _s();\n  const [query, setQuery] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Track login state\n  const navigate = useNavigate();\n  const location = useLocation();\n  const options = [\"North\", \"Continental\", \"South\", \"About\", \"Login\"];\n  const handleInputChange = event => {\n    const value = event.target.value;\n    setQuery(value);\n    if (value) {\n      const filteredSuggestions = options.filter(option => option.toLowerCase().includes(value.toLowerCase()));\n      setSuggestions(filteredSuggestions);\n    } else {\n      setSuggestions([]);\n    }\n  };\n  const handleSearch = event => {\n    event.preventDefault();\n    if (query.trim()) {\n      navigate(`/${query.trim().toLowerCase()}`);\n      setSuggestions([]);\n    }\n  };\n  const handleSuggestionClick = suggestion => {\n    setQuery(suggestion);\n    navigate(`/${suggestion.toLowerCase()}`);\n    setSuggestions([]);\n  };\n  const isActive = path => location.pathname === path ? \"btn-outline-success text-success\" : \"text-white\";\n  const handleLogout = () => {\n    setIsLoggedIn(false);\n    navigate('/');\n  };\n  const handleLogin = () => {\n    setIsLoggedIn(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"navbar navbar-expand-lg bg-black border-bottom border-body\",\n    \"data-bs-theme\": \"dark\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        className: \"navbar-brand\",\n        to: \"/\",\n        children: \"Sharipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"navbar-nav me-auto mb-2 mb-lg-0 d-flex flex-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"nav-item\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              className: `nav-link mx-2 ${isActive('/')}`,\n              \"aria-current\": \"page\",\n              to: \"/\",\n              children: \"Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"nav-item\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              className: `nav-link mx-2 ${isActive('/about')}`,\n              to: \"/about\",\n              children: \"About Us\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"nav-item\",\n            children: isLoggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"profile-dropdown-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"profile-button\",\n                id: \"profileDropdown\",\n                \"data-bs-toggle\": \"dropdown\",\n                \"aria-expanded\": \"false\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"default-profile.jpg\" // Replace with actual profile image URL\n                  ,\n                  alt: \"Profile\",\n                  className: \"profile-image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"profile-dropdown\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"profile-dropdown-item\",\n                  onClick: handleLogout,\n                  children: \"Logout\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"profile-dropdown-item\",\n                  onClick: () => alert('Delete Account Clicked'),\n                  children: \"Delete Account\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Link, {\n              className: `nav-link mx-2 ${isActive('/login')}`,\n              to: \"/login\",\n              onClick: handleLogin,\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"d-flex position-relative\",\n          role: \"search\",\n          onSubmit: handleSearch,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control me-2\",\n            type: \"search\",\n            placeholder: \"Search\",\n            \"aria-label\": \"Search\",\n            value: query,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline-success\",\n            type: \"submit\",\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, this), suggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list-group position-absolute\",\n            style: {\n              top: '100%',\n              zIndex: 1000,\n              width: '100%'\n            },\n            children: suggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-group-item list-group-item-action\",\n              onClick: () => handleSuggestionClick(suggestion),\n              style: {\n                cursor: 'pointer'\n              },\n              children: suggestion\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 278,\n    columnNumber: 5\n  }, this);\n}\n_s(NavBar, \"OQd7r/H8Ge+79h3aM/0UPGEPHSU=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = NavBar;\nexport default NavBar;\nvar _c;\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"names":["React","useState","Link","useNavigate","useLocation","jsxDEV","_jsxDEV","NavBar","_s","query","setQuery","suggestions","setSuggestions","isLoggedIn","setIsLoggedIn","navigate","location","options","handleInputChange","event","value","target","filteredSuggestions","filter","option","toLowerCase","includes","handleSearch","preventDefault","trim","handleSuggestionClick","suggestion","isActive","path","pathname","handleLogout","handleLogin","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","id","src","alt","onClick","alert","role","onSubmit","type","placeholder","onChange","length","style","top","zIndex","width","map","index","cursor","_c","$RefreshReg$"],"sources":["C:/Users/ROG/OneDrive/Desktop/recipe/frontend/frontend/src/components/Navbar.js"],"sourcesContent":["// // import React, { useState } from 'react';\r\n// // import { Link, useNavigate, useLocation } from 'react-router-dom';\r\n\r\n// // function NavBar() {\r\n// //   const [query, setQuery] = useState('');\r\n// //   const [suggestions, setSuggestions] = useState([]);\r\n// //   const navigate = useNavigate();\r\n// //   const location = useLocation(); // Get the current path\r\n\r\n// //   // List of available search terms\r\n// //   const options = [\"North\", \"Continental\", \"South\", \"About\", \"Login\"];\r\n\r\n// //   // Handle search input changes\r\n// //   const handleInputChange = (event) => {\r\n// //     const value = event.target.value;\r\n// //     setQuery(value);\r\n\r\n// //     // Filter suggestions based on the input\r\n// //     if (value) {\r\n// //       const filteredSuggestions = options.filter(option =>\r\n// //         option.toLowerCase().includes(value.toLowerCase())\r\n// //       );\r\n// //       setSuggestions(filteredSuggestions);\r\n// //     } else {\r\n// //       setSuggestions([]);\r\n// //     }\r\n// //   };\r\n\r\n// //   // Handle form submission\r\n// //   const handleSearch = (event) => {\r\n// //     event.preventDefault();\r\n// //     if (query.trim()) {\r\n// //       navigate(`/${query.trim().toLowerCase()}`);\r\n// //       setSuggestions([]); // Clear suggestions after search\r\n// //     }\r\n// //   };\r\n\r\n// //   // Handle suggestion click\r\n// //   const handleSuggestionClick = (suggestion) => {\r\n// //     setQuery(suggestion); // Set query to the selected suggestion\r\n// //     navigate(`/${suggestion.toLowerCase()}`);\r\n// //     setSuggestions([]); // Clear suggestions after selection\r\n// //   };\r\n\r\n// //   // Function to determine if a link is active\r\n// //   const isActive = (path) => location.pathname === path ? \"btn-outline-success text-success\" : \"text-white\";\r\n\r\n// //   return (\r\n// //     <nav className=\"navbar navbar-expand-lg bg-black border-bottom border-body\" data-bs-theme=\"dark\">\r\n// //       <div className=\"container-fluid\">\r\n// //         <Link className=\"navbar-brand\" to=\"/\">Sharipe</Link>\r\n// //         <div className=\"d-flex align-items-center\">\r\n// //           <ul className=\"navbar-nav me-auto mb-2 mb-lg-0 d-flex flex-row\">\r\n// //             <li className=\"nav-item\">\r\n// //               <Link className={`nav-link mx-2 ${isActive('/')}`} aria-current=\"page\" to=\"/\">Home</Link>\r\n// //             </li>\r\n// //             <li className=\"nav-item\">\r\n// //               <Link className={`nav-link mx-2 ${isActive('/about')}`} to=\"/about\">About Us</Link>\r\n// //             </li>\r\n// //             <li className=\"nav-item\">\r\n// //               <Link className={`nav-link mx-2 ${isActive('/login')}`} to=\"/login\">Login</Link>\r\n// //             </li>\r\n// //           </ul>\r\n// //           <form className=\"d-flex position-relative\" role=\"search\" onSubmit={handleSearch}>\r\n// //             <input\r\n// //               className=\"form-control me-2\"\r\n// //               type=\"search\"\r\n// //               placeholder=\"Search\"\r\n// //               aria-label=\"Search\"\r\n// //               value={query}\r\n// //               onChange={handleInputChange}\r\n// //             />\r\n// //             <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n\r\n// //             {/* Display suggestions */}\r\n// //             {suggestions.length > 0 && (\r\n// //               <ul className=\"list-group position-absolute\" style={{ top: '100%', zIndex: 1000, width: '100%' }}>\r\n// //                 {suggestions.map((suggestion, index) => (\r\n// //                   <li\r\n// //                     key={index}\r\n// //                     className=\"list-group-item list-group-item-action\"\r\n// //                     onClick={() => handleSuggestionClick(suggestion)}\r\n// //                     style={{ cursor: 'pointer' }}\r\n// //                   >\r\n// //                     {suggestion}\r\n// //                   </li>\r\n// //                 ))}\r\n// //               </ul>\r\n// //             )}\r\n// //           </form>\r\n// //         </div>\r\n// //       </div>\r\n// //     </nav>\r\n// //   );\r\n// // }\r\n\r\n// // export default NavBar;\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import { Link, useNavigate, useLocation } from 'react-router-dom';\r\n\r\n// function NavBar() {\r\n//   const [query, setQuery] = useState('');\r\n//   const [suggestions, setSuggestions] = useState([]);\r\n//   const [isLoggedIn, setIsLoggedIn] = useState(false); // Track login state\r\n//   const navigate = useNavigate();\r\n//   const location = useLocation();\r\n\r\n//   const options = [\"North\", \"Continental\", \"South\", \"About\", \"Login\"];\r\n\r\n//   const handleInputChange = (event) => {\r\n//     const value = event.target.value;\r\n//     setQuery(value);\r\n\r\n//     if (value) {\r\n//       const filteredSuggestions = options.filter(option =>\r\n//         option.toLowerCase().includes(value.toLowerCase())\r\n//       );\r\n//       setSuggestions(filteredSuggestions);\r\n//     } else {\r\n//       setSuggestions([]);\r\n//     }\r\n//   };\r\n\r\n//   const handleSearch = (event) => {\r\n//     event.preventDefault();\r\n//     if (query.trim()) {\r\n//       navigate(`/${query.trim().toLowerCase()}`);\r\n//       setSuggestions([]);\r\n//     }\r\n//   };\r\n\r\n//   const handleSuggestionClick = (suggestion) => {\r\n//     setQuery(suggestion);\r\n//     navigate(`/${suggestion.toLowerCase()}`);\r\n//     setSuggestions([]);\r\n//   };\r\n\r\n//   const isActive = (path) => location.pathname === path ? \"btn-outline-success text-success\" : \"text-white\";\r\n\r\n//   const handleLogout = () => {\r\n//     setIsLoggedIn(false); // Update state to log out\r\n//     // Additional logout logic (e.g., clearing tokens, session storage) can go here\r\n//     navigate('/');\r\n//   };\r\n\r\n//   const handleLogin = () => {\r\n//     // Example function to simulate login - in real usage, this would check credentials\r\n//     setIsLoggedIn(true);\r\n//   };\r\n\r\n//   return (\r\n//     <nav className=\"navbar navbar-expand-lg bg-black border-bottom border-body\" data-bs-theme=\"dark\">\r\n//       <div className=\"container-fluid\">\r\n//         <Link className=\"navbar-brand\" to=\"/\">Sharipe</Link>\r\n//         <div className=\"d-flex align-items-center\">\r\n//           <ul className=\"navbar-nav me-auto mb-2 mb-lg-0 d-flex flex-row\">\r\n//             <li className=\"nav-item\">\r\n//               <Link className={`nav-link mx-2 ${isActive('/')}`} aria-current=\"page\" to=\"/\">Home</Link>\r\n//             </li>\r\n//             <li className=\"nav-item\">\r\n//               <Link className={`nav-link mx-2 ${isActive('/about')}`} to=\"/about\">About Us</Link>\r\n//             </li>\r\n//             <li className=\"nav-item\">\r\n//               {isLoggedIn ? (\r\n//                 <div className=\"nav-item dropdown\">\r\n//                   <button\r\n//                     className=\"btn btn-outline-success rounded-circle\"\r\n//                     id=\"profileDropdown\"\r\n//                     data-bs-toggle=\"dropdown\"\r\n//                     aria-expanded=\"false\"\r\n//                   >\r\n//                     <img\r\n//                       src=\"default-profile.jpg\" // Use a default profile image here\r\n//                       alt=\"Profile\"\r\n//                       className=\"rounded-circle\"\r\n//                       style={{ width: \"30px\", height: \"30px\" }}\r\n//                     />\r\n//                   </button>\r\n//                   <ul className=\"dropdown-menu dropdown-menu-end\" aria-labelledby=\"profileDropdown\">\r\n//                     <li><button className=\"dropdown-item\" onClick={handleLogout}>Logout</button></li>\r\n//                     <li><button className=\"dropdown-item\">Delete Account</button></li>\r\n//                   </ul>\r\n//                 </div>\r\n//               ) : (\r\n//                 <Link className={`nav-link mx-2 ${isActive('/login')}`} to=\"/login\" onClick={handleLogin}>Login</Link>\r\n//               )}\r\n//             </li>\r\n//           </ul>\r\n//           <form className=\"d-flex position-relative\" role=\"search\" onSubmit={handleSearch}>\r\n//             <input\r\n//               className=\"form-control me-2\"\r\n//               type=\"search\"\r\n//               placeholder=\"Search\"\r\n//               aria-label=\"Search\"\r\n//               value={query}\r\n//               onChange={handleInputChange}\r\n//             />\r\n//             <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n\r\n//             {suggestions.length > 0 && (\r\n//               <ul className=\"list-group position-absolute\" style={{ top: '100%', zIndex: 1000, width: '100%' }}>\r\n//                 {suggestions.map((suggestion, index) => (\r\n//                   <li\r\n//                     key={index}\r\n//                     className=\"list-group-item list-group-item-action\"\r\n//                     onClick={() => handleSuggestionClick(suggestion)}\r\n//                     style={{ cursor: 'pointer' }}\r\n//                   >\r\n//                     {suggestion}\r\n//                   </li>\r\n//                 ))}\r\n//               </ul>\r\n//             )}\r\n//           </form>\r\n//         </div>\r\n//       </div>\r\n//     </nav>\r\n//   );\r\n// }\r\n\r\n// export default NavBar;\r\n\r\nimport React, { useState } from 'react';\r\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\r\nimport './navr.css';\r\n\r\nfunction NavBar() {\r\n  const [query, setQuery] = useState('');\r\n  const [suggestions, setSuggestions] = useState([]);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Track login state\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  const options = [\"North\", \"Continental\", \"South\", \"About\", \"Login\"];\r\n\r\n  const handleInputChange = (event) => {\r\n    const value = event.target.value;\r\n    setQuery(value);\r\n\r\n    if (value) {\r\n      const filteredSuggestions = options.filter(option =>\r\n        option.toLowerCase().includes(value.toLowerCase())\r\n      );\r\n      setSuggestions(filteredSuggestions);\r\n    } else {\r\n      setSuggestions([]);\r\n    }\r\n  };\r\n\r\n  const handleSearch = (event) => {\r\n    event.preventDefault();\r\n    if (query.trim()) {\r\n      navigate(`/${query.trim().toLowerCase()}`);\r\n      setSuggestions([]);\r\n    }\r\n  };\r\n\r\n  const handleSuggestionClick = (suggestion) => {\r\n    setQuery(suggestion);\r\n    navigate(`/${suggestion.toLowerCase()}`);\r\n    setSuggestions([]);\r\n  };\r\n\r\n  const isActive = (path) => location.pathname === path ? \"btn-outline-success text-success\" : \"text-white\";\r\n\r\n  const handleLogout = () => {\r\n    setIsLoggedIn(false);\r\n    navigate('/');\r\n  };\r\n\r\n  const handleLogin = () => {\r\n    setIsLoggedIn(true);\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg bg-black border-bottom border-body\" data-bs-theme=\"dark\">\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"/\">Sharipe</Link>\r\n        <div className=\"d-flex align-items-center\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0 d-flex flex-row\">\r\n            <li className=\"nav-item\">\r\n              <Link className={`nav-link mx-2 ${isActive('/')}`} aria-current=\"page\" to=\"/\">Home</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className={`nav-link mx-2 ${isActive('/about')}`} to=\"/about\">About Us</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              {isLoggedIn ? (\r\n                <div className=\"profile-dropdown-container\">\r\n                  <button\r\n                    className=\"profile-button\"\r\n                    id=\"profileDropdown\"\r\n                    data-bs-toggle=\"dropdown\"\r\n                    aria-expanded=\"false\"\r\n                  >\r\n                    <img\r\n                      src=\"default-profile.jpg\" // Replace with actual profile image URL\r\n                      alt=\"Profile\"\r\n                      className=\"profile-image\"\r\n                    />\r\n                  </button>\r\n                  <div className=\"profile-dropdown\">\r\n                    <button\r\n                      className=\"profile-dropdown-item\"\r\n                      onClick={handleLogout}\r\n                    >\r\n                      Logout\r\n                    </button>\r\n                    <button\r\n                      className=\"profile-dropdown-item\"\r\n                      onClick={() => alert('Delete Account Clicked')}\r\n                    >\r\n                      Delete Account\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <Link className={`nav-link mx-2 ${isActive('/login')}`} to=\"/login\" onClick={handleLogin}>Login</Link>\r\n              )}\r\n            </li>\r\n          </ul>\r\n          <form className=\"d-flex position-relative\" role=\"search\" onSubmit={handleSearch}>\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n              value={query}\r\n              onChange={handleInputChange}\r\n            />\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n\r\n            {suggestions.length > 0 && (\r\n              <ul className=\"list-group position-absolute\" style={{ top: '100%', zIndex: 1000, width: '100%' }}>\r\n                {suggestions.map((suggestion, index) => (\r\n                  <li\r\n                    key={index}\r\n                    className=\"list-group-item list-group-item-action\"\r\n                    onClick={() => handleSuggestionClick(suggestion)}\r\n                    style={{ cursor: 'pointer' }}\r\n                  >\r\n                    {suggestion}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            )}\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,EAAEC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AACjE,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}