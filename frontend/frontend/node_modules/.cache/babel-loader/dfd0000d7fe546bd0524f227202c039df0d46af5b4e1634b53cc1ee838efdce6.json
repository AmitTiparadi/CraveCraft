{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ROG\\\\OneDrive\\\\Desktop\\\\recipe\\\\frontend\\\\frontend\\\\src\\\\components\\\\Signup.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n\n// function Register() {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [confirmPassword, setConfirmPassword] = useState('');\n//   const [error, setError] = useState(null);\n//   const navigate = useNavigate();\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     // Check if passwords match\n//     if (password !== confirmPassword) {\n//       setError(\"Passwords do not match.\");\n//       return;\n//     }\n\n//     try {\n//       const response = await fetch('http://localhost:4000/api/users/register', {\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify({ email, password }),\n//       });\n//       const data = await response.json();\n\n//       if (data.success) {\n//         navigate('/login'); // Redirect to login page after successful registration\n//       } else {\n//         setError(data.message || 'Registration failed');\n//       }\n//     } catch (err) {\n//       console.error(\"Error registering:\", err);\n//       setError(\"An error occurred during registration\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"container mt-4\">\n//       <h1>Register</h1>\n//       {error && <p className=\"text-danger\">{error}</p>}\n//       <form onSubmit={handleSubmit}>\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"email\" className=\"form-label\">Email address</label>\n//           <input \n//             type=\"email\" \n//             className=\"form-control\" \n//             id=\"email\" \n//             value={email}\n//             onChange={(e) => setEmail(e.target.value)}\n//             required \n//           />\n//         </div>\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"password\" className=\"form-label\">Password</label>\n//           <input \n//             type=\"password\" \n//             className=\"form-control\" \n//             id=\"password\" \n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//             required \n//           />\n//         </div>\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"confirmPassword\" className=\"form-label\">Confirm Password</label>\n//           <input \n//             type=\"password\" \n//             className=\"form-control\" \n//             id=\"confirmPassword\" \n//             value={confirmPassword}\n//             onChange={(e) => setConfirmPassword(e.target.value)}\n//             required \n//           />\n//         </div>\n//         <button type=\"submit\" className=\"btn btn-primary\">Register</button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default Register;\n\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import './style.css';\n\n// function Signup() {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [confirmPassword, setConfirmPassword] = useState('');\n//   const [error, setError] = useState(null);\n//   const navigate = useNavigate();\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     // Check if passwords match\n//     if (password !== confirmPassword) {\n//       setError(\"Passwords do not match.\");\n//       return;\n//     }\n\n//     try {\n//       const response = await fetch('http://localhost:4000/api/signup', { // Assuming the backend API for registration is at '/api/register'\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify({ email, password }),\n//       });\n//       const data = await response.json();\n\n//       if (data.success) {\n//         // Redirect to home page after successful registration\n//         navigate('/login'); // You can redirect to login page after successful registration\n//       } else if (data.message === 'User already exists') {\n//         setError('User already exists. Please log in.');\n//       } else {\n//         setError(data.message || 'Registration failed');\n//       }\n//     } catch (err) {\n//       console.error(\"Error registering:\", err);\n//       setError(\"An error occurred during registration\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"auth-container\">\n//       <h2>Sign Up</h2>\n//       {error && <p className=\"message\">{error}</p>}\n//       <form onSubmit={handleSubmit}>\n//         <input \n//           type=\"email\" \n//           placeholder=\"Email\" \n//           value={email}\n//           className='text-black'\n//           onChange={(e) => setEmail(e.target.value)}\n//           required \n//         />\n//         <input \n//           type=\"password\" \n//           placeholder=\"Password\" \n//           value={password}\n//           className='text-black'\n//           onChange={(e) => setPassword(e.target.value)}\n//           required \n//         />\n//         <input \n//           type=\"password\" \n//           placeholder=\"Confirm Password\" \n//           className='text-black'\n//           value={confirmPassword}\n//           onChange={(e) => setConfirmPassword(e.target.value)}\n//           required \n//         />\n//         <button type=\"submit\" className=\"stylish-button\">Sign Up</button>\n//       </form>\n//       <p className=\"link\" onClick={() => navigate('/login')}>Already have an account? Login</p>\n//     </div>\n//   );\n// }\n\n// export default Signup;\n\n// src/components/Register.js\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setMessage(\"Passwords do not match.\");\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:4000/api/signup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        setMessage(\"Registration successful! Please log in.\");\n        navigate('/login');\n      } else {\n        setMessage(data.message || 'Registration failed');\n      }\n    } catch (err) {\n      console.error(\"Error registering:\", err);\n      setMessage(\"An error occurred during registration\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true,\n        className: \"text-black\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true,\n        className: \"text-black\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Confirm Password\",\n        value: confirmPassword,\n        onChange: e => setConfirmPassword(e.target.value),\n        required: true,\n        className: \"text-black\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"stylish-button\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => navigate('/login'),\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"6n5aAVAAiFqlSLYZZOc4gzGRGYo=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Register","_s","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","navigate","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","success","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ROG/OneDrive/Desktop/recipe/frontend/frontend/src/components/Signup.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n// function Register() {\r\n//   const [email, setEmail] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   const [confirmPassword, setConfirmPassword] = useState('');\r\n//   const [error, setError] = useState(null);\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     // Check if passwords match\r\n//     if (password !== confirmPassword) {\r\n//       setError(\"Passwords do not match.\");\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       const response = await fetch('http://localhost:4000/api/users/register', {\r\n//         method: 'POST',\r\n//         headers: { 'Content-Type': 'application/json' },\r\n//         body: JSON.stringify({ email, password }),\r\n//       });\r\n//       const data = await response.json();\r\n\r\n//       if (data.success) {\r\n//         navigate('/login'); // Redirect to login page after successful registration\r\n//       } else {\r\n//         setError(data.message || 'Registration failed');\r\n//       }\r\n//     } catch (err) {\r\n//       console.error(\"Error registering:\", err);\r\n//       setError(\"An error occurred during registration\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container mt-4\">\r\n//       <h1>Register</h1>\r\n//       {error && <p className=\"text-danger\">{error}</p>}\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div className=\"mb-3\">\r\n//           <label htmlFor=\"email\" className=\"form-label\">Email address</label>\r\n//           <input \r\n//             type=\"email\" \r\n//             className=\"form-control\" \r\n//             id=\"email\" \r\n//             value={email}\r\n//             onChange={(e) => setEmail(e.target.value)}\r\n//             required \r\n//           />\r\n//         </div>\r\n//         <div className=\"mb-3\">\r\n//           <label htmlFor=\"password\" className=\"form-label\">Password</label>\r\n//           <input \r\n//             type=\"password\" \r\n//             className=\"form-control\" \r\n//             id=\"password\" \r\n//             value={password}\r\n//             onChange={(e) => setPassword(e.target.value)}\r\n//             required \r\n//           />\r\n//         </div>\r\n//         <div className=\"mb-3\">\r\n//           <label htmlFor=\"confirmPassword\" className=\"form-label\">Confirm Password</label>\r\n//           <input \r\n//             type=\"password\" \r\n//             className=\"form-control\" \r\n//             id=\"confirmPassword\" \r\n//             value={confirmPassword}\r\n//             onChange={(e) => setConfirmPassword(e.target.value)}\r\n//             required \r\n//           />\r\n//         </div>\r\n//         <button type=\"submit\" className=\"btn btn-primary\">Register</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Register;\r\n    \r\n\r\n// import React, { useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import './style.css';\r\n\r\n// function Signup() {\r\n//   const [email, setEmail] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   const [confirmPassword, setConfirmPassword] = useState('');\r\n//   const [error, setError] = useState(null);\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     // Check if passwords match\r\n//     if (password !== confirmPassword) {\r\n//       setError(\"Passwords do not match.\");\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       const response = await fetch('http://localhost:4000/api/signup', { // Assuming the backend API for registration is at '/api/register'\r\n//         method: 'POST',\r\n//         headers: { 'Content-Type': 'application/json' },\r\n//         body: JSON.stringify({ email, password }),\r\n//       });\r\n//       const data = await response.json();\r\n\r\n//       if (data.success) {\r\n//         // Redirect to home page after successful registration\r\n//         navigate('/login'); // You can redirect to login page after successful registration\r\n//       } else if (data.message === 'User already exists') {\r\n//         setError('User already exists. Please log in.');\r\n//       } else {\r\n//         setError(data.message || 'Registration failed');\r\n//       }\r\n//     } catch (err) {\r\n//       console.error(\"Error registering:\", err);\r\n//       setError(\"An error occurred during registration\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"auth-container\">\r\n//       <h2>Sign Up</h2>\r\n//       {error && <p className=\"message\">{error}</p>}\r\n//       <form onSubmit={handleSubmit}>\r\n//         <input \r\n//           type=\"email\" \r\n//           placeholder=\"Email\" \r\n//           value={email}\r\n//           className='text-black'\r\n//           onChange={(e) => setEmail(e.target.value)}\r\n//           required \r\n//         />\r\n//         <input \r\n//           type=\"password\" \r\n//           placeholder=\"Password\" \r\n//           value={password}\r\n//           className='text-black'\r\n//           onChange={(e) => setPassword(e.target.value)}\r\n//           required \r\n//         />\r\n//         <input \r\n//           type=\"password\" \r\n//           placeholder=\"Confirm Password\" \r\n//           className='text-black'\r\n//           value={confirmPassword}\r\n//           onChange={(e) => setConfirmPassword(e.target.value)}\r\n//           required \r\n//         />\r\n//         <button type=\"submit\" className=\"stylish-button\">Sign Up</button>\r\n//       </form>\r\n//       <p className=\"link\" onClick={() => navigate('/login')}>Already have an account? Login</p>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Signup;\r\n\r\n\r\n\r\n// src/components/Register.js\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './style.css';\r\n\r\nfunction Register() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Passwords do not match.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:4000/api/signup', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n      const data = await response.json();\r\n\r\n      if (data.success) {\r\n        setMessage(\"Registration successful! Please log in.\");\r\n        navigate('/login');\r\n      } else {\r\n        setMessage(data.message || 'Registration failed');\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error registering:\", err);\r\n      setMessage(\"An error occurred during registration\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      <h2>Sign Up</h2>\r\n      {message && <p className=\"message\">{message}</p>}\r\n      <form onSubmit={handleSubmit}>\r\n        <input \r\n          type=\"email\" \r\n          placeholder=\"Email\" \r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n          className='text-black'\r\n        />\r\n        <input \r\n          type=\"password\" \r\n          placeholder=\"Password\" \r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required \r\n          className='text-black'\r\n        />\r\n        <input \r\n          type=\"password\" \r\n          placeholder=\"Confirm Password\" \r\n          value={confirmPassword}\r\n          onChange={(e) => setConfirmPassword(e.target.value)}\r\n          required \r\n          className='text-black'\r\n        />\r\n        <button type=\"submit\" className=\"stylish-button\">Sign Up</button>\r\n      </form>\r\n      <p>Already have an account? <span onClick={() => navigate('/login')}>Login</span></p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMc,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAE9B,MAAMc,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAIT,QAAQ,KAAKE,eAAe,EAAE;MAChCG,UAAU,CAAC,yBAAyB,CAAC;MACrC;IACF;IAEA,IAAI;MACF,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;QAC/DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAElB,KAAK;UAAEE;QAAS,CAAC;MAC1C,CAAC,CAAC;MACF,MAAMiB,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAElC,IAAID,IAAI,CAACE,OAAO,EAAE;QAChBd,UAAU,CAAC,yCAAyC,CAAC;QACrDC,QAAQ,CAAC,QAAQ,CAAC;MACpB,CAAC,MAAM;QACLD,UAAU,CAACY,IAAI,CAACb,OAAO,IAAI,qBAAqB,CAAC;MACnD;IACF,CAAC,CAAC,OAAOgB,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,oBAAoB,EAAEF,GAAG,CAAC;MACxCf,UAAU,CAAC,uCAAuC,CAAC;IACrD;EACF,CAAC;EAED,oBACEV,OAAA;IAAK4B,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7B7B,OAAA;MAAA6B,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACfxB,OAAO,iBAAIT,OAAA;MAAG4B,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAEpB;IAAO;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChDjC,OAAA;MAAMkC,QAAQ,EAAEtB,YAAa;MAAAiB,QAAA,gBAC3B7B,OAAA;QACEmC,IAAI,EAAC,OAAO;QACZC,WAAW,EAAC,OAAO;QACnBC,KAAK,EAAElC,KAAM;QACbmC,QAAQ,EAAGzB,CAAC,IAAKT,QAAQ,CAACS,CAAC,CAAC0B,MAAM,CAACF,KAAK,CAAE;QAC1CG,QAAQ;QACRZ,SAAS,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC,eACFjC,OAAA;QACEmC,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC,UAAU;QACtBC,KAAK,EAAEhC,QAAS;QAChBiC,QAAQ,EAAGzB,CAAC,IAAKP,WAAW,CAACO,CAAC,CAAC0B,MAAM,CAACF,KAAK,CAAE;QAC7CG,QAAQ;QACRZ,SAAS,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC,eACFjC,OAAA;QACEmC,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC,kBAAkB;QAC9BC,KAAK,EAAE9B,eAAgB;QACvB+B,QAAQ,EAAGzB,CAAC,IAAKL,kBAAkB,CAACK,CAAC,CAAC0B,MAAM,CAACF,KAAK,CAAE;QACpDG,QAAQ;QACRZ,SAAS,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC,eACFjC,OAAA;QAAQmC,IAAI,EAAC,QAAQ;QAACP,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D,CAAC,eACPjC,OAAA;MAAA6B,QAAA,GAAG,2BAAyB,eAAA7B,OAAA;QAAMyC,OAAO,EAAEA,CAAA,KAAM9B,QAAQ,CAAC,QAAQ,CAAE;QAAAkB,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClF,CAAC;AAEV;AAAC/B,EAAA,CArEQD,QAAQ;EAAA,QAKEH,WAAW;AAAA;AAAA4C,EAAA,GALrBzC,QAAQ;AAuEjB,eAAeA,QAAQ;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}