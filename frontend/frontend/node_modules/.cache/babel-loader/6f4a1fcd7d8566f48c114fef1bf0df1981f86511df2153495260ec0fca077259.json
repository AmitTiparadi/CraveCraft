{"ast":null,"code":"// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import { useParams } from 'react-router-dom';\n\n// const RecipeDetails = () => {\n//   const { id } = useParams(); // Get recipe ID from URL params\n//   const [recipe, setRecipe] = useState({ name: \"\", description: \"\", ingredients: [], directions: \"\" });\n//   const [isEditing, setIsEditing] = useState(false); // State to toggle edit mode\n//   const [updatedRecipe, setUpdatedRecipe] = useState({ name: \"\", description: \"\", ingredients: [], directions: \"\" }); // State to hold updated data\n\n//   useEffect(() => {\n//     axios\n//       .get(`http://localhost:4000/api/recipes/category/${id}`)\n//       .then((response) => {\n//         setRecipe(response.data);            // Sets the main recipe data\n//         setUpdatedRecipe(response.data);     // Initializes updatedRecipe with fetched data\n//       })\n//       .catch((error) => {\n//         console.error('Error fetching recipe details:', error);\n//       });\n//   }, [id]);\n\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setUpdatedRecipe((prev) => ({\n//       ...prev,\n//       [name]: name === \"ingredients\" ? value.split('\\n') : value // Convert ingredients textarea input to array\n//     }));\n//   };\n\n//   const handleUpdate = () => {\n//     axios\n//       .patch(`http://localhost:4000/api/recipes/${id}`, updatedRecipe)\n//       .then((response) => {\n//         setRecipe(response.data); // Use backend response to set recipe\n//         setIsEditing(false);      // Exit edit mode\n//       })\n//       .catch((error) => {\n//         console.error('Error updating recipe:', error);\n//       });\n//   };\n\n//   if (!recipe) {\n//     return <div>Loading...</div>;\n//   }\n\n//   return (\n//     <div className=\"container mt-5 p-4\" style={{ maxWidth: \"700px\", border: \"1px solid #ddd\", borderRadius: \"8px\", boxShadow: \"0 4px 12px rgba(0, 0, 0, 0.1)\", backgroundColor: \"#fff\" }}>\n//       {isEditing ? (\n//         <>\n//           <input\n//             type=\"text\"\n//             name=\"name\"\n//             value={updatedRecipe.name}\n//             onChange={handleInputChange}\n//             style={{ fontSize: \"2.8rem\", fontWeight: \"bold\", color: \"#333\", width: \"100%\", marginBottom: \"1rem\" }}\n//           />\n//           <textarea\n//             name=\"description\"\n//             value={updatedRecipe.description}\n//             onChange={handleInputChange}\n//             style={{ fontSize: \"1.2rem\", fontWeight: \"500\", color: \"#555\", lineHeight: \"1.6\", width: \"100%\", height: \"80px\" }}\n//           />\n//           <h3 style={{ fontSize: \"1.6rem\", fontWeight: \"bold\", color: \"#333\", marginTop: \"2rem\" }}>Ingredients</h3>\n//           <textarea\n//             name=\"ingredients\"\n//             value={updatedRecipe.ingredients.join('\\n')}\n//             onChange={handleInputChange}\n//             style={{ fontSize: \"1.1rem\", fontWeight: \"500\", color: \"#444\", width: \"100%\", height: \"100px\" }}\n//           />\n//           <h3 style={{ fontSize: \"1.6rem\", fontWeight: \"bold\", color: \"#333\", marginTop: \"2rem\" }}>Directions</h3>\n//           <textarea\n//             name=\"directions\"\n//             value={updatedRecipe.directions}\n//             onChange={handleInputChange}\n//             style={{ fontSize: \"1.2rem\", fontWeight: \"500\", color: \"#555\", lineHeight: \"1.6\", width: \"100%\", height: \"120px\" }}\n//           />\n//         </>\n//       ) : (\n//         <>\n//           <h1 style={{ fontSize: \"2.8rem\", fontWeight: \"bold\", color: \"#333\", marginBottom: \"1rem\" }}>{recipe.name}</h1>\n//           <p style={{ fontSize: \"1.2rem\", fontWeight: \"500\", color: \"#555\", lineHeight: \"1.6\" }}>{recipe.description}</p>\n//           <h3 style={{ fontSize: \"1.6rem\", fontWeight: \"bold\", color: \"#333\", marginTop: \"2rem\" }}>Ingredients</h3>\n//           <ul style={{ listStyleType: \"disc\", paddingLeft: \"1.5rem\", color: \"#444\" }}>\n//             {recipe.ingredients.map((ingredient, index) => (\n//               <li key={index} style={{ fontSize: \"1.1rem\", fontWeight: \"500\", marginBottom: \"0.5rem\" }}>{ingredient}</li>\n//             ))}\n//           </ul>\n//           <h3 style={{ fontSize: \"1.6rem\", fontWeight: \"bold\", color: \"#333\", marginTop: \"2rem\" }}>Directions</h3>\n//           <p style={{ fontSize: \"1.2rem\", fontWeight: \"500\", color: \"#555\", lineHeight: \"1.6\" }}>{recipe.directions}</p>\n//         </>\n//       )}\n\n//       <div style={{ display: \"flex\", justifyContent: \"flex-start\", marginTop: \"2rem\" }}>\n//         {isEditing ? (\n//           <button\n//             onClick={handleUpdate}\n//             style={{ backgroundColor: \"#28a745\", color: \"#fff\", border: \"none\", padding: \"0.6rem 1.2rem\", borderRadius: \"4px\", cursor: \"pointer\", fontSize: \"1.1rem\", fontWeight: \"600\", marginRight: \"1rem\" }}\n//           >\n//             Save\n//           </button>\n//         ) : (\n//           <button\n//             onClick={() => setIsEditing(true)}\n//             style={{ backgroundColor: \"#007bff\", color: \"#fff\", border: \"none\", padding: \"0.6rem 1.2rem\", borderRadius: \"4px\", cursor: \"pointer\", fontSize: \"1.1rem\", fontWeight: \"600\" }}\n//           >\n//             Update\n//           </button>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default RecipeDetails;","map":{"version":3,"names":[],"sources":["C:/Users/ROG/OneDrive/Desktop/recipe/frontend/frontend/src/components/RecipeDetails.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import axios from 'axios';\r\n// import { useParams } from 'react-router-dom';\r\n\r\n// const RecipeDetails = () => {\r\n//   const { id } = useParams(); // Get recipe ID from URL params\r\n//   const [recipe, setRecipe] = useState({ name: \"\", description: \"\", ingredients: [], directions: \"\" });\r\n//   const [isEditing, setIsEditing] = useState(false); // State to toggle edit mode\r\n//   const [updatedRecipe, setUpdatedRecipe] = useState({ name: \"\", description: \"\", ingredients: [], directions: \"\" }); // State to hold updated data\r\n\r\n//   useEffect(() => {\r\n//     axios\r\n//       .get(`http://localhost:4000/api/recipes/category/${id}`)\r\n//       .then((response) => {\r\n//         setRecipe(response.data);            // Sets the main recipe data\r\n//         setUpdatedRecipe(response.data);     // Initializes updatedRecipe with fetched data\r\n//       })\r\n//       .catch((error) => {\r\n//         console.error('Error fetching recipe details:', error);\r\n//       });\r\n//   }, [id]);\r\n\r\n//   const handleInputChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setUpdatedRecipe((prev) => ({\r\n//       ...prev,\r\n//       [name]: name === \"ingredients\" ? value.split('\\n') : value // Convert ingredients textarea input to array\r\n//     }));\r\n//   };\r\n\r\n//   const handleUpdate = () => {\r\n//     axios\r\n//       .patch(`http://localhost:4000/api/recipes/${id}`, updatedRecipe)\r\n//       .then((response) => {\r\n//         setRecipe(response.data); // Use backend response to set recipe\r\n//         setIsEditing(false);      // Exit edit mode\r\n//       })\r\n//       .catch((error) => {\r\n//         console.error('Error updating recipe:', error);\r\n//       });\r\n//   };\r\n\r\n//   if (!recipe) {\r\n//     return <div>Loading...</div>;\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"container mt-5 p-4\" style={{ maxWidth: \"700px\", border: \"1px solid #ddd\", borderRadius: \"8px\", boxShadow: \"0 4px 12px rgba(0, 0, 0, 0.1)\", backgroundColor: \"#fff\" }}>\r\n//       {isEditing ? (\r\n//         <>\r\n//           <input\r\n//             type=\"text\"\r\n//             name=\"name\"\r\n//             value={updatedRecipe.name}\r\n//             onChange={handleInputChange}\r\n//             style={{ fontSize: \"2.8rem\", fontWeight: \"bold\", color: \"#333\", width: \"100%\", marginBottom: \"1rem\" }}\r\n//           />\r\n//           <textarea\r\n//             name=\"description\"\r\n//             value={updatedRecipe.description}\r\n//             onChange={handleInputChange}\r\n//             style={{ fontSize: \"1.2rem\", fontWeight: \"500\", color: \"#555\", lineHeight: \"1.6\", width: \"100%\", height: \"80px\" }}\r\n//           />\r\n//           <h3 style={{ fontSize: \"1.6rem\", fontWeight: \"bold\", color: \"#333\", marginTop: \"2rem\" }}>Ingredients</h3>\r\n//           <textarea\r\n//             name=\"ingredients\"\r\n//             value={updatedRecipe.ingredients.join('\\n')}\r\n//             onChange={handleInputChange}\r\n//             style={{ fontSize: \"1.1rem\", fontWeight: \"500\", color: \"#444\", width: \"100%\", height: \"100px\" }}\r\n//           />\r\n//           <h3 style={{ fontSize: \"1.6rem\", fontWeight: \"bold\", color: \"#333\", marginTop: \"2rem\" }}>Directions</h3>\r\n//           <textarea\r\n//             name=\"directions\"\r\n//             value={updatedRecipe.directions}\r\n//             onChange={handleInputChange}\r\n//             style={{ fontSize: \"1.2rem\", fontWeight: \"500\", color: \"#555\", lineHeight: \"1.6\", width: \"100%\", height: \"120px\" }}\r\n//           />\r\n//         </>\r\n//       ) : (\r\n//         <>\r\n//           <h1 style={{ fontSize: \"2.8rem\", fontWeight: \"bold\", color: \"#333\", marginBottom: \"1rem\" }}>{recipe.name}</h1>\r\n//           <p style={{ fontSize: \"1.2rem\", fontWeight: \"500\", color: \"#555\", lineHeight: \"1.6\" }}>{recipe.description}</p>\r\n//           <h3 style={{ fontSize: \"1.6rem\", fontWeight: \"bold\", color: \"#333\", marginTop: \"2rem\" }}>Ingredients</h3>\r\n//           <ul style={{ listStyleType: \"disc\", paddingLeft: \"1.5rem\", color: \"#444\" }}>\r\n//             {recipe.ingredients.map((ingredient, index) => (\r\n//               <li key={index} style={{ fontSize: \"1.1rem\", fontWeight: \"500\", marginBottom: \"0.5rem\" }}>{ingredient}</li>\r\n//             ))}\r\n//           </ul>\r\n//           <h3 style={{ fontSize: \"1.6rem\", fontWeight: \"bold\", color: \"#333\", marginTop: \"2rem\" }}>Directions</h3>\r\n//           <p style={{ fontSize: \"1.2rem\", fontWeight: \"500\", color: \"#555\", lineHeight: \"1.6\" }}>{recipe.directions}</p>\r\n//         </>\r\n//       )}\r\n\r\n//       <div style={{ display: \"flex\", justifyContent: \"flex-start\", marginTop: \"2rem\" }}>\r\n//         {isEditing ? (\r\n//           <button\r\n//             onClick={handleUpdate}\r\n//             style={{ backgroundColor: \"#28a745\", color: \"#fff\", border: \"none\", padding: \"0.6rem 1.2rem\", borderRadius: \"4px\", cursor: \"pointer\", fontSize: \"1.1rem\", fontWeight: \"600\", marginRight: \"1rem\" }}\r\n//           >\r\n//             Save\r\n//           </button>\r\n//         ) : (\r\n//           <button\r\n//             onClick={() => setIsEditing(true)}\r\n//             style={{ backgroundColor: \"#007bff\", color: \"#fff\", border: \"none\", padding: \"0.6rem 1.2rem\", borderRadius: \"4px\", cursor: \"pointer\", fontSize: \"1.1rem\", fontWeight: \"600\" }}\r\n//           >\r\n//             Update\r\n//           </button>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default RecipeDetails;\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}